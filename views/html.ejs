<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<style>
  p {
    font-size: 1rem;
  }

  ul li {
    font-size: 1rem;
  }
</style>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">


      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <div class="text-content-article mt-5">
                <p><b><i>
                      Ngày hôm nay chúng ta sẽ đi vào tìm hiểu những cách và quy tắt viết CSS thường được áp dụng trong
                      lập trình để giúp bạn có thể dễ dàng chỉnh sửa cũng như
                      duy trì đoạn mã tốt hơn khi viết cho các dự án web lớn nhé!
                    </i></b>
                </p>
                <hr>
              </div>
            </div>
          </div>
          <p>
            Thông thường khi chúng ta viết mã thì việc làm sao cho nó hoạt động được xem là vấn đề quan trọng nhất.
            Nhưng khi đoạn mã đã chạy được rồi thì
            vấn đề tiếp theo bạn cần phải chú ý tới là làm sao để tối ưu đoạn code đó tốt nhất có thể (thường được gọi
            là clean code). Vì việc làm này sẽ giúp bạn có thể dễ dàng chỉnh sửa, bảo trì code

            cũng như tăng khả năng load của website được tốt hơn.<br />
            Bây giờ chúng ta sẽ đi vào tìm hiểu các phương pháp phổ biến để viết CSS được tốt hơn nhé!
          </p>
          <h2 class="bg-primary mb-4 mt-4 text-white rounded p-2 shadow title-article-size">
            Thiết Lập Reset Cho File CSS
          </h2>
          <p>
            Nếu như bạn để ý thì mỗi trình duyệt sẽ có một cách thiết lập <b>style mặc định riêng cho phần tử HTML</b>
            do đó khoảng cách padding, margin, border...
            của các phần tử này
            sẽ thường hiển thị không giống nhau ở các trình duyệt khác nhau.
          </p>
          <p>
            Việc chúng ta sử dụng đoạn mã reset file CSS sẽ giúp các phần tử của trang web có thể hiển thị một cách
            <b>nhất quát</b> trên nhiều trình duyệt khác nhau.
            Dưới đây là đoạn mã Reset CSS của tác giả Eric Mayer's mà theo mình thấy được nhiều bạn lập trình viên đánh
            giá rất cao:
          </p>
          <pre><code class="css">/*&nbsp;http://meyerweb.com/eric/tools/css/reset/<br/> &nbsp;&nbsp;&nbsp;v2.0&nbsp;|&nbsp;20110126<br/> &nbsp;&nbsp;&nbsp;License:&nbsp;none&nbsp;(public&nbsp;domain)<br/> */<br/>html,&nbsp;body,&nbsp;div,&nbsp;span,&nbsp;applet,&nbsp;object,&nbsp;iframe,<br/> h1,&nbsp;h2,&nbsp;h3,&nbsp;h4,&nbsp;h5,&nbsp;h6,&nbsp;p,&nbsp;blockquote,&nbsp;pre,<br/> a,&nbsp;abbr,&nbsp;acronym,&nbsp;address,&nbsp;big,&nbsp;cite,&nbsp;code,<br/> del,&nbsp;dfn,&nbsp;em,&nbsp;img,&nbsp;ins,&nbsp;kbd,&nbsp;q,&nbsp;s,&nbsp;samp,<br/> small,&nbsp;strike,&nbsp;strong,&nbsp;sub,&nbsp;sup,&nbsp;tt,&nbsp;var,<br/> b,&nbsp;u,&nbsp;i,&nbsp;center,<br/> dl,&nbsp;dt,&nbsp;dd,&nbsp;ol,&nbsp;ul,&nbsp;li,<br/> fieldset,&nbsp;form,&nbsp;label,&nbsp;legend,<br/> table,&nbsp;caption,&nbsp;tbody,&nbsp;tfoot,&nbsp;thead,&nbsp;tr,&nbsp;th,&nbsp;td,<br/> article,&nbsp;aside,&nbsp;canvas,&nbsp;details,&nbsp;embed,&nbsp;<br/> figure,&nbsp;figcaption,&nbsp;footer,&nbsp;header,&nbsp;hgroup,<br/>&nbsp; menu,&nbsp;nav,&nbsp;output,&nbsp;ruby,&nbsp;section,&nbsp;summary,<br/> time,&nbsp;mark,&nbsp;audio,&nbsp;video&nbsp;{<br/> margin:&nbsp;0;<br/> padding:&nbsp;0;<br/> border:&nbsp;0;<br/> font-size:&nbsp;100%;<br/> font:&nbsp;inherit;<br/> vertical-align:&nbsp;baseline;<br/> }<br/> <br/> article,&nbsp;aside,&nbsp;details,&nbsp;figcaption,&nbsp;figure,&nbsp;<br/> footer,&nbsp;header,&nbsp;hgroup,&nbsp;menu,&nbsp;nav,&nbsp;section&nbsp;{<br/> display:&nbsp;block;<br/> }<br/> body&nbsp;{<br/> line-height:&nbsp;1;<br/> }<br/> ol,&nbsp;ul&nbsp;{<br/> list-style:&nbsp;none;<br/> }<br/> blockquote,&nbsp;q&nbsp;{<br/> quotes:&nbsp;none;<br/> }<br/> blockquote:before,&nbsp;blockquote:after,<br/> q:before,&nbsp;q:after&nbsp;{<br/> content:&nbsp;'';<br/> content:&nbsp;none;<br/> }<br/> table&nbsp;{<br/> border-collapse:&nbsp;collapse;<br/> border-spacing:&nbsp;0;<br/> }<br/></code></pre>

          <p class="mt-4">
            Bạn chỉ cần copy đoạn mã này và bỏ vào vị trí đầu tiên trong file CSS là có thể sử dụng rồi nhé! Nếu bạn
            muốn tìm hiểu thêm về
            tác giả Eric Mayer's và cách giải thích đoạn mã CSS Reset hoạt động thì có thể truy cập <a
              href="https://meyerweb.com/eric/tools/css/reset/" target="_blank" title="CSS Tools: Reset CSS"
              rel="noopener noreferrer">ở đây nha</a>.
          </p>

          <p>
            Ngoài ra bạn cũng có thể sử dụng file <code>Normalize.css</code> để reset lại CSS cho trang web của mình
            nhé!
          </p>

          <img class="img-fluid lazyload"
            data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1604375995/cach_viet_css_tot_hon/Normalizecss_npla4m.png"
            alt="Normalize.css"
           >











          <p class="mt-4 pt-2 pb-4"> <a class="button-blog-post-article"
              href="https://codepen.io/haycuoilennao19/pen/jOrxvyW" title="Tạo Sticky Navigation"
              target="_blank">Nguồn</a></p>

          <h4 class="mt-4 pt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng
              kết: </b></h4>
          <p>Qua đây mình mong bài viết sẽ cung cấp thêm cho bạn kiến thức tạo sticky navigation
            hữu ích
            dành cho việc phát triển, thiết kế web và nếu có thắc mắc gì cứ gửi email
            mình sẽ
            phản hồi sớm nhất có thể. Rất mong bạn tiếp tục ủng hộ trang web để mình có
            thể viết nhiều bài hay hơn nữa
            nhé. Chúc bạn có một ngày vui vẻ!</p>
      </div>
      </article>
    </div>
  </div>




  <div class="mb-5"></div>
</div>
<div class="col-lg-12 col-md-12 col-xs-12">
  <div class="mt-5"></div>



</div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>

<script src="/javascripts/lazysizes.min.js" async></script>

<%- include('footer') -%>