<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <h2 class="bg-primary mb-4 text-white rounded p-2 shadow"><i class="fa fa-cube" aria-hidden="true"></i>Bootstrap 4 Phần 11</h2>
          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Xin chào các bạn quay lại blog của mình. Hôm nay mình sẽ giới thiệu tiếp về các component trong Bootstrap 4. Nào hãy cũng mình tìm hiểu nhé!</i>
            </p>
            <div class="bg-light p-2 mt-4 mb-4 shadow rounded-pill"><h4 class="text-primary ml-4">Framework Bootstrap 4</h4></div>
          
            <div class="bg-primary p-2 rounded text-white">
              <h3>Component Tooltips:</h3>
            </div>
            <p class="mt-4">
              Tooltip là một đoạn chữ nhỏ được xuất hiện khi người dùng đưa chuột lên (hover) các đối tượng trong HTMl như là thẻ <b>a, button...</b> để cung cấp chỉ dẫn hay thông tin thêm về đối tượng
              được hover. Nó sẽ rất hữu ích đối với những người dùng mới khi vào trang web của bạn vì tooltip sẽ cung cấp thông tin hay mục đích sử dụng của các biểu tượng và liên kết bằng cách hover chúng.
            </p>
            <p>
              Để tạo component này thì bước đầu tiên  mình cần thêm thuộc tính <code>data-toggle="tooltip"</code> và thuộc tính <code>title</code> giúp chúng ta xác định chữ sẽ hiện bên trong tooltip (thông tin thêm, chỉ dẫn...) vào đối tượng HTML.
              Để dễ hình dung bạn xem đoạn code dưới đây nhé:
            </p>
            <h4 class="text-primary">
              HTML:
            </h4>
            <pre><code class="html">&#60;a href="#" data-toggle="tooltip" id="tooltip_vi_du" title="Nội dung"&#62;Hover Vào Liên Kết&#60;/a&#62;</code></pre>
            <p class="mt-4">
              Bước thứ hai là nếu muốn tooltip hoạt động thì chúng ta bắt buộc phải thiết lập với Jquery bằng cách gọi đối tượng theo id, class hay là thuộc tính... mà bạn muốn hiển thị và gọi hàm  <code>tooltip()</code> cho nó.
              Để dễ hình dung bạn xem đoạn code Jquery dưới đây nhé:
            </p>
            <h4 class="text-primary">
              JS:
            </h4>
            <pre><code class="js">&#60;script&#62;<br/> $(document).ready(function(){<br/> &nbsp;&nbsp;&nbsp;&nbsp;$('[data-toggle="tooltip"]').tooltip();<br/> });<br/> &#60;/script&#62;<br/></code></pre>
            <p class="mt-4">
              Ở trên là mình sẽ thực hiện hàm tooltip cho tất cả đối tượng HTML mà có thuộc tính <code>data-toggle="tooltip"</code>. Bước tiếp theo chúng ta sẽ kết hợp hai đoạn code trên để tạo ra component tooltip.
              Để nắm rõ hơn bạn xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
              Component Tooltip:
            </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="vYOwOGd" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="component tooltip">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/vYOwOGd">
              component tooltip</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <script async src="https://static.codepen.io/assets/embed/ei.js"></script>
            <p class="mt-4">
              Tiếp theo mình sẽ chỉ bạn cách điều chỉnh vị trí của Tooltip như hiển thị bên trái, bên phải, ở trên hay là ở dưới bằng thuộc tính <code>data-placement=(position)</code> với position là 
              các hướng mặc định của Bootstrap như là left, right, top và bottom. Để hiểu rõ hơn bạn xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
              Vị trí Tooltip:
            </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="YzXbXZa" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="position Tooltip">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/YzXbXZa">
              position Tooltip</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Nãy giờ ở các vị trên thì chúng ta  chỉ mới hiển thị một đoạn chữ cơ bản, tiếp theo mình sẽ đi vào cách chèn icon hay hình ảnh vào một component tooltip bằng cách sử dụng Jquery.
              Để nắm rõ hơn bạn xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
             Thêm hình ảnh vào Tooltip:
            </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="XWbwbeN" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="Add image in tooltip">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/XWbwbeN">
              Add image in tooltip</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Cuối cùng trong component này mình muốn giới thiệu về thời gian sẽ xuất hiện của tooltip khi người dùng hover vào đối tượng HTML (thường được gọi là delay). Để hiểu rõ hơn
              bạn xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
              Thuộc tính delay trong Tooltip:
            </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="oNXRXEE" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="delay tooltip">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/oNXRXEE">
              delay tooltip</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Ở đây mình sử dùng thuộc tính <code> delay: {show: 2000, hide:500}</code> để xác định khi người dùng hover vào đối tượng thì sau 2s nó sẽ hiện bằng thuộc tính <code>show: 2000</code> và
              khi người dùng di chuyển chuột ra khỏi đối tượng thì tooltip sẽ ẩn đi  sau  0.5s  bằng thuộc tính <code> hide:500</code>.
            </p>
            <div class="bg-primary p-2 rounded text-white">
              <h3>Component Popovers:</h3>
            </div>
            <p class="mt-4">
              Thực ra nó cũng giống như chức năng của Tooltip nhưng chỉ sẽ hiển thị khi mà người dùng <b>nhấn (click)</b> vào đối tượng HTML. Để sử dụng nó bạn cần thêm file <b>Poper.js</b> vào 
              trong File HTML nhé. Để xem cách chèn file này thì bạn tham khảo ở đây: <a href="http://www.niemvuilaptrinh.com/article/5e86052210ee792be0376294" target="_blank">Ở Phần Component Dropdown</a>
              hoặc ở Bootstrap <a href="https://getbootstrap.com/docs/4.4/getting-started/introduction/" target="_blank">Thêm Popper.js</a>. Ở đây chúng ta cũng sẽ có hai bước như trên:
            </p>
            <p>
              Bước đầu tiên mình sẽ thêm các thuộc tính cần thiết để gọi component Poppovers là <code>data-toggle="popover"</code>, <code>title="Tiêu Đề"</code> để xác định tiêu đề của Popover,
              <code>data-content="Nội Dung"</code> xác định nội dung của Popover. Để nắm rõ hơn bạn xem đoạn code dưới đây nhé:
            </p>
            <h4 class="text-primary">
              HTML:
            </h4>
            <pre><code class="html">&#60;a class="btn btn-primary" href="#" data-toggle="popover" title="Tiêu Đề" data-content="Nội Dung"&#62;Hiển thị popover&#60;/a&#62;</code></pre>
            <p class="mt-4">
              Bước thứ hai là nếu muốn popover hoạt động thì chúng ta bắt buộc phải thiết lập với Jquery bằng cách gọi đối tượng theo id, class hay là thuộc tính...
              mà bạn muốn hiển thị và gọi hàm popover() cho nó. Để dễ hình dung bạn xem đoạn code Jquery dưới đây nhé:
            </p>
            <h4 class="text-primary">
              JS:
            </h4>
            <pre><code class="js">&#60;script&#62;<br/> $(document).ready(function(){<br/> &nbsp;&nbsp;&nbsp;&nbsp;$('[data-toggle="popover"]').popover();<br/> });<br/> &#60;/script&#62;<br/></code></pre>
            <p class="mt-4">
              Ở trên là mình sẽ thực hiện hàm popover cho tất cả đối tượng HTML mà có thuộc tính <code>data-toggle="popover"</code>. Bước tiếp theo chúng ta sẽ kết hợp hai đoạn code trên để tạo ra component popover. Để nắm rõ hơn bạn xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
             Component Popover:
            </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="gOpJpyJ" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="popover">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/gOpJpyJ">
              popover</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Tiếp theo mình sẽ chỉ bạn cách điều chỉnh vị trí của Popover như hiển thị bên trái, bên phải, ở trên hay là ở dưới bằng thuộc tính <code>data-placement=(position)</code> với position là 
              các hướng mặc định của Bootstrap như là left, right, top và bottom. Để hiểu rõ hơn bạn xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
             Vị trí Popover:
             </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="OJVYVeK" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="position of popovers">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/OJVYVeK">
              position of popovers</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Để xem được kết quả bạn chuyển sang chế độ screen <b>0.5x, 0.25x</b> nhé. Như ví dụ trên thì chúng ta sẽ gặp một vấn đề là khi người dùng nhấn vào 4 popover thì nó sẽ hiện hết cả 4,
              nhiều khi như vậy sẽ làm người dùng khó chịu vì khi muốn ẩn popover thì họ phải nhấn lại thêm một lần nữa vào các popover muốn ẩn. Để tránh tình trạng đó thì mình sẽ sử dụng thuộc tính
              <code>data-trigger="focus"</code> có nhiệm vụ sẽ tự động ẩn popover khi người dùng nhấn vào popover tiếp theo. Để hiễu rõ hơn bạn hãy xem ví dụ dưới đây nhé:
            </p>
            <h4 class="text-primary">
              data-trigger="focus" trong  Popover:
              </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="JjdqYoZ" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="data-trigger=&amp;quot;focus&amp;quot; Bootstrap">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/JjdqYoZ">
              data-trigger=&quot;focus&quot; Bootstrap</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Bây giờ mình sẽ giới thiệu cách đưa nội dung, hình ảnh, icon... vào trong Popover bằng Jquery. Để hiểu rõ hơn bạn xem ví dụ dưới đây nhé:
            </p>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="rNVgOxY" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="Add content and image Popover">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/rNVgOxY">
              Add content and image Popover</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
            </p>
            <p class="mt-4">
              Chúng ta cũng có thể thiết lập thời gian delay cho component Popover như Tooltip bằng cách sử dụng thuộc tính delay. Để hiểu rõ hơn bạn xem ví dụ dưới đây nhé:

            </p>
            <h4 class="text-primary">
             delay trong  Popover:
              </h4>
            <p class="codepen" data-height="265" data-theme-id="light" data-default-tab="html,result" data-user="haycuoilennao19" data-slug-hash="xxGNwVz" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="Delay in Popover">
              <span>See the Pen <a href="https://codepen.io/haycuoilennao19/pen/xxGNwVz">
              Delay in Popover</a> by haycuoilennao19 (<a href="https://codepen.io/haycuoilennao19">@haycuoilennao19</a>)
              on <a href="https://codepen.io">CodePen</a>.</span>
              </p>
            <p class="mt-4">
              Ở đây mình sử dùng thuộc tính <code> delay: {show: 2000, hide:500}</code> để xác định khi người dùng nhấn (click) vào đối tượng thì sau 2s nó sẽ hiện bằng thuộc tính <code>show: 2000</code> và
              khi người dùng nhấn (click) đối tượng lần nữa thì tooltip sẽ ẩn đi  sau  0.5s  bằng thuộc tính <code> hide:500</code>.
            </p>
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
           


































































             












            

            
            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>
        <p>Qua đây mình mong bài viết sẽ giúp các bạn nắm được thêm các component trong Bootstrap 4 và nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất mong bạn tiếp tục ủng hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>
         
      </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>

    <div class="card card-search">
      <div class="card-header card-header-search">
        Đăng kí Email

      </div>
      <div class="card-body card-body-search">
        <div class="text-email-subscribe">
          <p class="text-justify mt-4">Các bạn nhấp subscribe để nhận bài viết mới nhất từ mình nhé!</p>
        </div>
        <!-- Begin Mailchimp Signup Form -->
        <link href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css" rel="stylesheet" type="text/css">
        <style type="text/css">
          #mc_embed_signup {
            background: #fff;
            clear: left;
            font: 14px Helvetica, Arial, sans-serif;
          }

          /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
                         We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
        </style>
        <div id="mc_embed_signup">
          <form action="https://gmail.us20.list-manage.com/subscribe/post?u=02f033de83f488a359d24bc9f&amp;id=85d0d8697c"
            method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate"
            target="_blank" novalidate>
            <div id="mc_embed_signup_scroll">

              <div class="mc-field-group">
                <label for="mce-EMAIL" class="label-email mb-2">Email:
                </label>
                <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL"
                  placeholder="Hãy nhập địa chỉ email của bạn">

              </div>
              <div id="mce-responses" class="clear">
                <div class="response text-justify" id="mce-error-response" style="display:none"></div>
                <div class="response text-justify" id="mce-success-response" style="display:none"></div>
              </div>
              <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
              <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text"
                  name="b_02f033de83f488a359d24bc9f_85d0d8697c" tabindex="-1" value=""></div>
              <div class="clear"><input type="submit" value="Đăng Kí Email" name="subscribe" id="mc-embedded-subscribe"
                  class="button"></div>
            </div>
          </form>
        </div>
        <script type='text/javascript' src='//s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script>
        <script type='text/javascript'>
          (function ($) {
            window.fnames = new Array();
            window.ftypes = new Array();
            fnames[0] = 'EMAIL';
            ftypes[0] = 'email';
            fnames[1] = 'FNAME';
            ftypes[1] = 'text';
            fnames[2] = 'LNAME';
            ftypes[2] = 'text';
            fnames[3] = 'ADDRESS';
            ftypes[3] = 'address';
            fnames[4] = 'PHONE';
            ftypes[4] = 'phone';
            fnames[5] = 'BIRTHDAY';
            ftypes[5] = 'birthday';
          }(jQuery));
          var $mcj = jQuery.noConflict(true);
        </script>
        <!--End mc_embed_signup-->

      </div>
    </div>
  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<%- include('footer') -%>