<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i> Các Phương Thức Array (Mảng) Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình đi vào tìm hiểu cách sử dụng các phương thức với kiểu dữ liệu array (mảng)
                trong
                ngôn
                ngữ lập trình Javascript để phát triển web nhé.</i>
            </p>

            <div class="row">
              <div class="col-sm-12 bg-light p-2 mt-4 mb-4 shadow rounded-pill">
                <h4 class="text-primary ml-4 title-article-size">Các Phương Thức Array (Mảng) Trong Javascript</h4>
              </div>
            </div>
            <p>
              Trong bài này chúng ta sẽ đi vào tìm hiểu cách sử dụng các phương thức đối với kiểu dữ liệu mảng
              ở phía bên dưới nhé!
            </p>

            <h5 class="text-white bg-secondary p-2 shadow  title-article-size rounded">
              Phương thức push() trong Array Javascript:
            </h5>

            <p class="mt-4">
              Phương thức <b><code>push()</code></b> cho phép chúng ta <b>thêm</b> một hay nhiều phần tử con vào
              <b>vị trí cuối cùng</b> của mảng. Khi bạn sử dụng phương thức này thì <b>độ dài</b> của mảng cũng thay đổi nha.
              Bây giờ để hiểu rõ hơn chúng ta đi vào cú pháp của nó ở bên dưới nhé:
            </p>
            <p class="text-primary">Cú Pháp:</p>
            <pre><code class="javascript"> (Tên Mảng).push(Phần tử 1, Phần tử 2... Phần tử n);</code></pre>
            <p>
              Để hiểu rõ hơn chúng ta sẽ đi vào ví dụ thêm các phần tử cho mảng bằng phương thức <b><code>push()</code></b> ở dưới đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [];<br/> mang.push(4);<br/> mang.push(5);<br/> mang.push(6);<br/><br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589338157/Method-Array-JS/phuong-thuc-push_-trong-array_shfp6u.png"
              alt="Phương thức push() trong array(mảng) javascript">
            <p class="mt-4">
              Nếu thêm từng phần tử cho mảng như vậy sẽ mất nhiều thời gian và công sức nên bây giờ chúng ta sẽ đi vào tìm hiểu 
              cách <b>thêm nhiều phần tử</b> trong mảng bằng phương thức <b><code>push()</code></b> ở dưới đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [];<br/> mang.push(4,5,6);<br/><br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589338498/Method-Array-JS/them-nhieu-phan-tu-push_-trong-array_ixv941.png"
              alt="Thêm nhiều phần tử bằng phush() trong Array(mảng) JS">

              <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
                Phương thức pop() trong Array Javascript:
              </h5>
              <p class="mt-4">
                Phương thức <b><code>pop</code></b> giúp chúng ta <b>xóa phần tử</b> ở vị trí <b>cuối mảng</b> 
                và sẽ trả về kết quả phần tử bị xóa nếu nó được gọi. Để hiểu rõ hơn bạn xem cú pháp nó nhé:
              </p>
              <p class="text-primary">Cú Pháp:</p>
              <pre><code class="javascript"> (Tên Mảng).pop();</code></pre>
              <p>
                Để hiểu rõ hơn chúng ta sẽ đi vào ví dụ xóa các phần tử trong mảng bằng phương thức <b><code>pop()</code></b> ở dưới đây nhé:
              </p>
              <p>
                <mark class="p-1"><b>Đoạn Code:</b></mark>
              </p>
              <pre><code class="javascript"> let mang = [4, 5, 6];<br/> mang.pop();<br/> console.log("Mảng còn lại là: " + mang);<br/><br/> mang.pop();<br/> console.log("Mảng còn lại là: " + mang);</code></pre>
              <p class="mt-4">
                <mark class="p-1"><b>Kết Quả:</b></mark>
              </p>
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589339306/Method-Array-JS/phuong-thuc-pop_-trong-array_p1l0ft.png"
                alt="Phương thức pop() trong array(mảng) javascript">
             <p class="mt-4">
               Nếu chúng ta sử dụng phương thức <b><code>pop()</code></b> với mảng <b>rỗng</b> thì bạn nghĩ sẽ trả về kết quả thế nào nhỉ?
             </p>
             <p>
               Để trả lời câu hỏi trên chúng ta thử đi vào viết đoạn code để thử xem kết quả sao nhé:
             </p>
             <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [];<br/> console.log(mang.pop());</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589339770/Method-Array-JS/su-dung-pop_-voi-mang-rong-trong-array_sceae3.png"
              alt="Phương thức pop() với mảng rỗng trong array(mảng) javascript">
            <p class="mt-4">
              Kết quả trả về sẽ là <b>undefined</b> khi chúng ta sử dụng phương thức <b><code>pop()</code></b> với mảng rỗng.
            </p>
            <p>
              Bây giờ ta sẽ đi vào tìm hiểu <b>cách lấy giá trị</b> của một phần tử xóa bằng phương thức <b><code>pop()</code></b>
              thông qua ví dụ dưới đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [4, 5, 6];<br/> let phanTuBiXoa =  mang.pop();<br/><br/> console.log(mang);<br/> console.log(mang.length);<br/> console.log("Giá trị phần tử bị xóa: " + phanTuBiXoa)</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589340484/Method-Array-JS/lay-gia-tri-khi-dung-pop-trong-array_j942hk.png"
              alt="Lấy giá trị phương thức pop()  trong array(mảng) javascript">
              <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
                Phương thức unshift() trong Array Javascript:
              </h5>
              <p class="mt-4">
                Phương thức <b><code>unshift</code></b> giúp chúng ta <b>thêm</b> một hay nhiều hay phần tử 
                vào <b>vị trí đầu</b> của mảng. Để hiểu rõ hơn bạn xem cú pháp sau nhé: 
              </p>
              <p class="text-primary">Cú Pháp:</p>
              <pre><code class="javascript"> (Tên Mảng).unshift(Phần tử 1, Phần tử 2... Phần tử n)</code></pre>
              <p>
                Bây giờ để nắm rõ hơn chúng ta sẽ đi vào cách thêm một hay nhiều phần tử trong mảng bằng phương thức 
                <b><code>unshift()</code></b> ở ví dụ dưới đây nhé:
              </p>
              <p>
                <mark class="p-1"><b>Đoạn Code:</b></mark>
              </p>
              <pre><code class="javascript"> let mang = [];<br/> /*Thêm 1 Phần tử*/<br/> mang.unshift(4);<br/> console.log(mang)<br/><br/> /*Thêm nhiều phần tử cho mảng*/<br/> mang.unshift(5,6);<br/> console.log(mang);</code></pre>
              <p class="mt-4">
                <mark class="p-1"><b>Kết Quả:</b></mark>
              </p>
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589341114/Method-Array-JS/phuong-thuc-unshift_-trong-array_viyhpl.png"
                alt="Phương thức unshift() trong array (mảng) js">
              <p class="mt-4">
                Chúng ta cũng có thể kết hợp hai phương thức <b><code>unshift()</code></b> và <b><code>push()</code></b>
                để thêm các phần tử trong mảng. Để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
              </p>

              <p>
                <mark class="p-1"><b>Đoạn Code:</b></mark>
              </p>
              <pre><code class="javascript"> let mang = [8];<br/> mang.unshift(6, 7);<br/> mang.push(9, 10);<br/><br/> console.log(mang);</code></pre>
              <p class="mt-4">
                <mark class="p-1"><b>Kết Quả:</b></mark>
              </p>
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589341455/Method-Array-JS/ket-hop-unshift-push-trong-array_fvkwbe.png"
                alt="Kết hợp unshift() và push() trong array (mảng) js">
                <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
                  Phương thức shift() trong Array Javascript:
                </h5>
                <p>
                  Phương thức <b><code>shift()</code></b> sẽ giúp chúng ta xóa <b>phần tử</b> ở vị trí <b>đầu tiên</b> trong mảng. Để hiểu rõ hơn bạn xem cú pháp sau nhé: 
                </p>
                <p class="text-primary">
                  Cú Pháp:
                </p>
                <pre><code class="javascript"> (Tên Mảng).shift();</code></pre>
                <p>
                  Bây giờ chúng ta sẽ cùng nhau đi vào ví dụ thực tế để hiểu rõ hơn về nó nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [4, 5];<br/> mang.shift();<br/> console.log(mang)<br/><br/> mang.shift();<br/> console.log(mang)</code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589341955/Method-Array-JS/phuong-thuc-shift-trong-array_klgwhg.png"
                  alt="Phương thức shift() trong array (mảng) js">
                <p class="mt-4">
                  Bây giờ chúng ta thử xóa phần tử với <b>mảng rỗng</b> bằng phương thức <b><code>shift()</code></b> xem nó có trả về giá trị <b>undefined</b>
                  như phương thức <b><code>pop()</code></b> không nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [];<br/> mang.shift();<br/> console.log(mang);</code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589342168/Method-Array-JS/phuong-thuc-shift-voi-mang-rong-trong-array_ab5uyb.png"
                  alt="Phương thức shift() với mảng rỗng trong array (mảng) js">
                <p class="mt-4">
                  Như bạn thấy thì kết quả trả về vẫn là <b>mảng rỗng</b> khi ta sử dụng xóa phần tử với phương thức <b><code>shift()</code></b>.
                </p>

                <h5 class="text-white bg-secondary p-2 shadow title-article-size rounded">
                  Sử dụng vòng lặp với  Array Javascript:
                </h5>
                <p>
                  Thông thường chúng ta thường cần lấy hay lọc dữ liệu trong mảng thì việc sử dụng vòng lặp là cách tối ưu 
                  giúp chúng ta giải quyết vấn đề trên. Sau đây mình sẽ giới thiệu đến các bạn vòng lặp thông dụng 
                  hay được sử dụng đối với mảng ở dưới đây nhé.
                </p>

                <h6 class="text-primary"><b><u>Sử dụng vòng lặp for:</u></b></h6>
                <p>
                  Để dễ hình dung chúng ta cùng nhau đi vào ví dụ thực tế để lấy giá trị các phần tử trong mảng 
                  thông qua vòng lặp <b>for</b> ở dưới đây nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [4, 5, 6];<br/> for(let i=0; i < mang.length; i++){ <br/> &nbsp;&nbsp;console.log("Giá trị là " + mang[i]);<br/>&nbsp;}<br/></code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589355041/Method-Array-JS/vong-lap-for-voi-mang-js_dhqhzd.png"
                  alt="Sử dụng vòng lặp for với  array (mảng) js">

                  <h6 class="text-primary mt-4"><b><u>Sử dụng vòng lặp for-of:</u></b></h6>
                <p>
                 Bây giờ chúng ta sẽ đi vào ví dụ lấy dữ liệu  trong mảng thông qua vòng lặp <b>for-of</b> 
                 ở dưới dây nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [4, 5, 6];<br/> for(let phanTu of mang){ <br/> &nbsp;&nbsp;console.log("Giá trị là " + phanTu);<br/>&nbsp;}<br/></code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589355729/Method-Array-JS/vong-lap-for-of-voi-mang-js_ehks3j.png"
                  alt="Sử dụng vòng lặp for-of với  array (mảng) js">

                  <h6 class="text-primary mt-4"><b><u>Sử dụng vòng lặp for-in:</u></b></h6>
                <p>
                  Ở bài trước chúng ta có thử dùng <b><code>typeof</code></b> với mảng thì được kết quả <b>mảng  là một  object</b>.
                  Do đó bạn có thể sử dụng vong lặp <b>for-in</b> để lấy dữ liệu trong mảng thông qua ví dụ dưới đây nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [4, 5, 6];<br/> for(let phanTu in mang){ <br/> &nbsp;&nbsp;console.log("Giá trị là " + mang[phanTu]);<br/>&nbsp;}<br/></code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589356078/Method-Array-JS/su-dung-vong-lap-for-in-voi-mang-js_g7fjj6.png"
                  alt="Sử dụng vòng lặp for-in với  array (mảng) js">
                <p class="mt-4">
                  Cách gọi <b>mang[phanTu]</b> giúp chúng ta lấy giá trị thuộc tính trong kiểu dữ liệu object. Bạn có thể tham khảo thêm ở đây nhé:
                  <a href="https://www.niemvuilaptrinh.com/article/Object-Trong-Javascript" title="object trong js">Object trong Javascript</a>.
                </p>
                <h5 class="text-white bg-secondary p-2 shadow title-article-size rounded">
                  Chú ý khi sử dụng Array trong Javascript:
                </h5>
                <p>
                  Như bạn đã biết thì kiểu dữ liệu của mảng là <b>object</b> do đó về cơ bản mảng được xem  là một dạng đặc biệt của 
                  object.
                </p>
                <p>
                  Ví dụ khi bạn dùng <b>mang[0]</b> thì đó là cách gọi lấy giá trị của object với:
                  <ul>
                    <li><b>mang</b> là một object.</li>
                    <li><b>0</b> là thuộc tính trong object.</li>
                  </ul> 
                </p>
                <p>
                  Bạn có thể sử dụng các tính chất của object để áp dụng với mảng. Để dễ hình dung chúng ta hãy cùng nhau đi vào tìm hiểu ví dụ ở dưới đây nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [];<br/> mang[0] = "Màu Xanh";<br/> mang.mausac = "Màu Đỏ";<br/><br/> console.log(mang);<br/> console.log(mang["mausac"]);</code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589357718/Method-Array-JS/array-la-object-trong-js_psfvu1.png"
                  alt="Kiểu dữ liệu   array (mảng) là object js">
                <p class="mt-4">
                  Mình có thêm một lưu ý khác là khi gán hai biến mảng <b>bằng nhau</b> thì  nó sẽ
                 cùng  <b>tham chiếu</b> đến một địa chỉ lưu giá trị của biến như tính chất của object.
                  Nếu bạn muốn tham khảo lại phần object thì xem ở đây nhé:
                  <a href="https://www.niemvuilaptrinh.com/article/So-Sanh-va-Sao-Chep-Object-Trong-Javascript" title="Sao chép object">Object trong javascript</a>.
                 <br/> Bây giờ để hiểu rõ hơn chúng ta đi vào ví dụ sau đây nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [4, 5, 6];<br/> let mangCopy = mang;/*Gán hai biến mảng bằng nhau*/<br/> console.log(mangCopy);<br/><br/> mang.push(3);<br/> console.log(mangCopy);</code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589358809/Method-Array-JS/gan-bien-array-trong-js_yjazml.png"
                  alt="Gán biến rray (mảng)  js">
                <p class="mt-4">
                  Như bạn thấy thì khi chúng ta thay đổi số lượng  phần tử trong biến <b><code>mang</code></b> thì 
                  biến <b><code>mangCopy</code></b> cũng sẽ thay đổi theo.
                </p>























            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được <b>cách sử dụng các phương thức đối với mảng</b>
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>