<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i>Array (Mảng) Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình đi vào tìm hiểu khái niệm cũng như cách sử dụng với kiểu dữ liệu array (mảng) trong
                ngôn
                ngữ lập trình Javascript để phát triển web nhé.</i>
            </p>

            <div class="row"> 
              <div class="col-sm-12 bg-light p-2 mt-4 mb-4 shadow rounded-pill">
                <h4 class="text-primary ml-4 title-article-size">Array (Mảng) Trong Javascript</h4>
              </div>
            </div>
            <p>
              <b>Mảng (Array)</b> là một nơi  cho phép chúng ta lưu trữ nhiều giá trị theo thứ tự nhất định trong một biến duy nhất.<br/>
              Nó có thể chứa nhiều giá trị với <b>kiểu dữ liệu khác nhau</b> như là chuỗi, số, đối tượng... và chiều dài của 
              mảng có thể <b>tự động tăng lên hay giảm xuống</b> khi chúng ta thực hiện thêm hay xóa các phần tử trong mảng.<br/>
              Vị trí của các phần tử trong mảng sẽ bắt đầu <b>từ số 0</b> nhé.
            </p>
            <p>
              Ví dụ chúng ta có nhiều biến như đoạn code sau đây:
            </p>
            <pre><code class="javascript"> let mauSac1 = 'xanh';<br/> let mauSac2 = 'đỏ';<br/> let mauSac3 = 'cam';</code></pre>
            <p>
              Việc lưu trữ giá trị biến như vậy sẽ làm bạn khó khăn trong việc tìm kiếm, sử dụng biến và 
              gây hao phí bộ nhớ. Thì lúc này sử dụng array(mảng) là một giải pháp phù hợp. Bây giờ để hiểu rõ hơn bạn cùng mình đi  tìm 
              hiểu nhé!
            </p>
            
            <h5 class="text-white bg-secondary p-2 shadow  title-article-size rounded">
              Cách Tạo <b>Array (Mảng)</b> Trong Javascript:
            </h5>

            <p class="mt-4">
              Thông thường chúng ta có hai cách tạo mảng trong javascript là sử dụng từ khóa <b>new</b> hoặc 
              dấu <b>[]</b>. Để hiểu rõ hơn chúng ta đi vào tìm hiểu cú pháp của từng cách trên nhé: 
            </p>
            <h6 class="text-primary"><b><u>Sử dụng từ khóa <b>new</b> để tạo mảng</b>:</u></h6>
            <p>
              Bây giờ chúng ta đi vào cú phép của nó nhé:
            </p>
            <pre><code class="javascript"> let mang = new Array();</code></pre>
            <p>
              Sau khi đã khai báo một biến với kiểu dữ liệu thì chúng ta sẽ đi vào <b>cách thêm phần tử</b>
              cho mảng thông qua ví dụ dưới đây nhé:
            </p>

            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = new Array(4, 5, 6);<br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589291114/Array-Trong-JS/khai-bao-mang-bang-new-js_fff3nv.png"
              alt="Khai bảo mảng bằng new Array trong javascript">
            <p class="mt-4">
              Ngoài ra chúng ta cũng có thể  thiết lập 
              <b>chiều dài trước</b> cho mảng mà không cần thêm các phần tử bằng cách sử dụng <b>1 tham số</b>
             trong  cách khai báo này. Để hiểu rõ hơn bạn 
              xem đoạn cú pháp  sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = new Array(5);<br/> console.log(mang);<br/> console.log(mang.length)</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589291578/Array-Trong-JS/thiet-lap-do-dai-truoc-cho-mang-js_xrl48r.png"
              alt="Thiết lập độ dài trước cho mảng trong javascript">
            <p class="mt-4">
              Chúng ta cũng có thể sử dụng <b>các kiểu dữ liệu khác</b> cho  phần tử trong mảng ở ví dụ dưới đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = new Array("Xin Chào", false);<br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589291813/Array-Trong-JS/khai_bao-kieu-du-lieu-khac-cho-mang-js_wz1mcw.png"
              alt="Khai báo các kiểu dữ liệu khác cho mảng trong javascript">

              <h6 class="text-primary mt-4"><b><u>Sử dụng dấu <b>[]</b> để tạo mảng</b>:</u></h6>
            <p>
              Cách này thì thường được sử dụng nhiều trong việc khởi tạo mảng trong javascript vì tính 
              nhanh, gọn và đơn giản của nó. Chúng ta cùng tìm hiểu cú pháp của nó sau đây nhé:
            </p>
            <pre><code class="javascript"> let mang = [phần tử 1, phần tử 2, phần tử 3... phần tử n]</code></pre>
            <p>
              Bây giờ để hiểu rõ hơn chúng ta sẽ đi vào cách thêm các phần tử cho nó nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = ["xanh", "đỏ", "cam"];<br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589292228/Array-Trong-JS/khai_bao-kieu-_-cho-mang-js_bnzkxl.png"
              alt="Khai báo  cho mảng bằng dấu [] trong javascript">
            <p class="mt-4">
              Chúng ta cũng có thể khai báo một <b>mảng rỗng</b> với cách này như sau:
            </p>
            <pre><code class="javascript"> let mang = [];</code></pre>

            <h5 class="text-white bg-secondary p-2 shadow  mt-4 title-article-size rounded">
              Cách truy cập các phần tử trong  <b>Array (Mảng)</b> Javascript:
            </h5>
            <p>
              Bạn có thể truy cập để lấy dữ liệu các phần tử bằng cách sử dụng dấu <b><code>[]</code></b> 
              kết hợp với <b>vị trí chỉ mục</b> của phần tử trong mảng. Bạn lưu ý là thành phần đầu tiên trong mảng 
              sẽ có vị trí chỉ mục là 0 nha. Để dễ hình dung bạn xem ví dụ sau đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = ["Màu Xanh", "Màu Đỏ", "Màu Cam"];<br/><br/> console.log("Màu thứ nhất là: " + mang[0]);<br/> console.log("Màu thứ hai là: " + mang[1]);<br/> console.log("Màu thứ ba là: " + mang[2]);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589292889/Array-Trong-JS/truy-cap-phan-tu-trong-mang-js_wmim0m.png"
              alt="Truy cập phần tử trong mảng javascript">
            <p class="mt-4">
              Ở ví dụ trên chúng ta có chiều dài của mảng là 3 và vị trí chỉ mục chỉ mục của các phần tử  
              là <b>từ 0 tới 2</b>. Như vậy để truy cập giá trị của mảng thì:<br/>
                <b><code>(Tên biến mảng)[Vị trí chỉ mục phần tử]</code></b>
            </p>
            <p>
              Vậy nếu như chúng ta truy cập phần tử mà <b>không tồn tại</b> trong mảng thì sao nhỉ?
            </p>
            <p>
              Trước khi biết kết quả thì bạn xem đoạn code sau đây nhé:
            </p>

            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = ["Màu Xanh", "Màu Đỏ", "Màu Cam"];<br/><br/> console.log(mang[100]);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589293488/Array-Trong-JS/loi-khitruy-cap-phan-tu-trong-mang-js_dvtusq.png"
              alt="Lỗi khi truy cập phần tử trong mảng javascript">
            <p class="mt-4">
              Như bạn thấy thì kết quả sẽ trả về <b>undefined</b> khi không tồn tại phần tử trong mảng.
            </p>

            <h6 class="text-primary"><b><u>Cách thay đổi giá trị cho phần tử trong mảng</b>:</u></h6>
            <p>
              Để thay đổi giá trị của phần tử trong mảng thì chúng ta sẽ sử dụng theo cú pháp sau nhé:
            </p>
            <pre><code class="javascript"> (Tên Mảng)[Vị trí chỉ mục] = Giá trị thay thế</code></pre>
            <p>
              Để hiểu rõ hơn chúng ta cùng nhau đi vào ví dụ thực tế sau đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = ["Màu Xanh", "Màu Đỏ", "Màu Cam"];<br/><br/> mang[1] = "Màu Vàng";<br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589294670/Array-Trong-JS/thay-doi-gia-tri-phan-tu-trong-mang-js_rrydsn.png"
              alt="Thay đổi giá trị phần tử trong mảng javascript">
            <p class="mt-4">
              Vậy nếu chúng ta gán giá trị cho <b>vị trí chỉ mục không tồn tại</b> thì sao nhỉ?
            </p>
            <p>
              Để giải quyết vấn đề trên bạn xem đoạn code sau đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = ["Màu Xanh", "Màu Đỏ", "Màu Cam"];<br/><br/> mang[100] = "Màu Vàng";<br/> console.log(mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589294904/Array-Trong-JS/gan-gia-tri-phan-tu-trong-mang-js_g5ptng.png"
              alt="Gán giá trị phần tử trong mảng javascript">
            <p class="mt-4">
              Như vậy ngoài các phần tử có sẵn thì nó sẽ thêm các phần tử rỗng đến vị trí chỉ mục <b>100</b> để thêm giá trị vào mảng.
            </p>
            <p>
              Cách sử dụng kiểu dữ liệu <b>object (đối tượng)</b> ở trong mảng:
            </p>
            <p>
              Để dễ hình dung thì bạn xem cách chúng ta thêm đối tượng cũng như cách sử dụng phần tử này trong mảng ở 
              ví dụ dưới đây nhé: 
            </p>
            
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [4, {so: 5}, 6];<br/><br/> /*Cách lấy giá trị phần tử object*/<br/> console.log(mang[1].so);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589295499/Array-Trong-JS/phan-tu-object-trong-mang-js_epi1oz.png"
              alt="Sử dụng phần tử object trong mảng javascript">
            <p class="mt-4">
              Cách chúng ta lấy giá trị của phần tử object là:<br/>
              <b><code>(Tên mảng)[(Vị trí chỉ mục phần tử object).(thuộc tính phần tử)]</code></b>
            </p>

            <h5 class="text-white bg-secondary p-2 shadow  mt-4 title-article-size rounded">
              Cách kiểm tra một biến có phải là   <b>Array (Mảng)</b> không?
            </h5>
            <p>
              Thông thường khi chúng ta muốn kiểm tra kiểu dữ liệu thì thường sử dụng lệnh <b>typeof</b>,
              vậy để xem lệnh này kiểm tra được kiểu dữ liệu mảng trong javascript không nhé?
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [4, 5, 6];<br/><br/> console.log(typeof mang);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589296301/Array-Trong-JS/lenh-typeof-trong-mang-js_yz2oki.png"
              alt="Sử dụng typeof trong mảng javascript">
            <p class="mt-4">
              Như bạn thấy thì kết quả sẽ trả về khi sử dụng <b>typeof</b> đối với mảng là <b>kiểu dữ liệu object</b>. Vậy chúng ta 
              có cách nào để kiểm tra kiểu dữ liệu một biến là mảng?
            </p>
            <p>
              Ở đây bạn nên sử dụng phương thức <b><code>Array.isArray()</code></b> để kiểm tra kiểm dữ liệu mảng cho biến với 
              giá trị trả về là <b><code>true</code></b> hoặc <b><code>false</code></b>.
              Để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
            </p>

            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let mang = [4, 5, 6];<br/><br/> console.log(Array.isArray(mang));</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589296722/Array-Trong-JS/lenh-isArraytrong-mang-js_agjtls.png"
              alt="Sử dụng isArray() trong mảng javascript">
              <h5 class="text-white bg-secondary p-2 shadow  mt-4 title-article-size rounded">
                Cách chuyển  từ  <b>Array (Mảng)</b> sang chuỗi bằng toString():
              </h5>

              <p>
                Chúng ta có thể chuyển kiểu dữ liệu từ mảng sang chuỗi bằng phương thức <b><code>toString()</code></b>
                với các phần tử trong mảng sẽ được ngăn bằng dấu <b><code>,</code></b> ở trong chuỗi. Để hiểu rõ hơn bạn xem đoạn code sau nhé:
              </p>
             
              <p>
                <mark class="p-1"><b>Đoạn Code:</b></mark>
              </p>
              <pre><code class="javascript"> let mang = ["Màu Xanh", "Màu Đỏ", "Màu Cam"];<br/> let chuoi = mang.toString();<br/><br/> console.log(chuoi);<br/> console.log(typeof chuoi);</code></pre>
              <p class="mt-4">
                <mark class="p-1"><b>Kết Quả:</b></mark>
              </p>
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589297175/Array-Trong-JS/su-dung-toString_-trong-mang-js_lilu8v.png"
                alt="Sử dụng toString() trong mảng javascript">
                <h5 class="text-white bg-secondary p-2 shadow  mt-4 title-article-size rounded">
                  Sử dụng length trong  <b>Array (Mảng)</b> Javascript:
                </h5>

                <p class="mt-4">
                  Khi sử dụng mảng với thuộc tính <b><code>length</code></b>, nó sẽ trả về <b>độ dài</b> của các phần tử được chứa trong mảng.
                  Để hiểu rõ hơn bạn xem ví dụ sau nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = ["Màu Xanh", "Màu Đỏ", "Màu Cam"];<br/> console.log(mang.length);</code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589335271/Array-Trong-JS/su-dung-length-trong-mang-js_ywfade.png"
                  alt="Sử dụng length trong mảng javascript">
                <p class="mt-4">
                  Ngoài ra chúng ta cũng có thể dùng thuộc tính <b>length</b> để <b>xác định trước độ dài</b> của các phần tử sẽ nằm trong chuỗi với giá trị mỗi phần tử là 
                  <b>undefined</b>. Để dễ hình dung bạn xem đoạn code sau nhé:
                </p>
                <p>
                  <mark class="p-1"><b>Đoạn Code:</b></mark>
                </p>
                <pre><code class="javascript"> let mang = [];<br/> mang.length = 10;<br/> console.log(mang);<br/> console.log("Giá trị là :" + mang[5]);</code></pre>
                <p class="mt-4">
                  <mark class="p-1"><b>Kết Quả:</b></mark>
                </p>
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589335598/Array-Trong-JS/xac-dinh-length-trong-mang-js_rwazdn.png"
                  alt="Xác định đỗ dài trong mảng javascript">
















            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được <b>khái niệm cũng như cách sử dụng mảng</b>
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>