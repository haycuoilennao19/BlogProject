<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<style>
  p {
    font-size: 1rem;
  }

  ul li {
    font-size: 1rem;
  }
</style>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i> Những Kỹ Thuật Viết Mã Dành Cho Người Mới Bắt Đầu Javascript (2020)</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>
                Trong bài viết hôm nay chúng ta sẽ đi vào tìm hiểu những kỹ thuật viết mã tối ưu trong Javascript được đúc kết trong quá trình 
                làm việc và học tập của các bạn lập trình viên trên thế giới. Và bây giờ chúng ta hãy cùng nhau đi vào tìm hiểu nhé! 
              </i>
            </p>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
                Kỹ thuật rút ngắn vòng lặp trong Javascript
              </h3>
            </div>
            <p>
              Thông thường khi chúng ta muốn sử dụng vòng lặp thì sẽ thực hiện như sau:
            </p>
            <pre><code class="javascript"> var lopHoc = ["Nam", "Như", "An"];<br/> for (let i = 0; i &#60; lopHoc.length; i++)</code></pre>
            <p class="mt-4">
              Và đây là cách bạn có thể rút gắn vòng lặp như sau:
            </p>
            <pre><code class="javascript"> for (let hocSinh of lopHoc)</code></pre>
            <p class="mt-2">
              Nếu bạn muốn truy cập vị trí index thông qua vòng lặp thì có thể thực hiện như sau:
            </p>
            <pre><code class="javascript">for (let index in lopHoc)</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
                Kỹ thuật rút ngắn câu điều kiện trong Javascript
              </h3>
            </div>
            <p>
              Thông thường khi chúng ta muốn viết câu điều kiện trong javascript thì hay sử dụng câu lệnh <code>if...else</code> như ví dụ sau đây:
            </p>
            <pre><code class="javascript"> const&nbsp;a&nbsp;=&nbsp;6;<br/>&nbsp;let&nbsp;ketqua&nbsp;;<br/>&nbsp;if&nbsp;(a&nbsp;>&nbsp;10)&nbsp;{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ketqua&nbsp;=&nbsp;"Giá&nbsp;trị&nbsp;lớn&nbsp;hơn&nbsp;10";<br/> &nbsp;}&nbsp;else&nbsp;{<br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ketqua&nbsp;=&nbsp;&nbsp;"Giá&nbsp;trị&nbsp;nhỏ&nbsp;hơn&nbsp;10";<br/> &nbsp;}</code></pre>
            <p class="mt-2">
              Và dưới đây là cách chúng ta có thể viết rút ngắn câu điều kiện phía trên:
            </p>
            <pre><code class="javascript"> const ketQua = a &#62; 10 ? "Giá trị lớn hơn 10" : "Giá trị nhỏ hơn 10";</code></pre>
            <p class="mt-2">
              Ngoài ra bạn cũng có thể thêm các điều kiện vào trong cách rút gọn như ở ví dụ dưới đây:
            </p>
            <pre><code class="javascript"> const ketQua = a > 10 ? "Giá trị lớn hơn 10" : x &#60; 5 ? "Giá trị nhỏ hơn 5" : "Giá trị trong khoảng từ 5 đến 10";</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
                Kỹ thuật rút ngắn kiểm tra điều kiện boolean Javascript
              </h3>
            </div>
            <p>
              Thông thường khi kiểm tra một điều kiện boolean thì chúng ta sẽ làm như sau:
            </p>
            <pre><code class="javascript"> if (hocJavascript === true)</code></pre>
            <p class="mt-2">
              Và đây là cách rút ngọn của ví dụ trên nhé:
            </p>
            <pre><code class="javascript"> if (hocJavascript)</code></pre>

            <p class="mt-2">
              Còn đây là ví dụ chúng ta xét với trường hợp <code>false</code> nha:
            </p>
            <pre><code class="javascript"> let a;<br/> if(a !== true){<br/> &nbsp;&nbsp; /*Đoạn Mã*/<br/> }</code></pre>
            <p class="mt-2">
              Cách rút gọn ví dụ trên:
            </p>
            <pre><code class="javascript"> let a;<br/> if(!a){<br/>  &nbsp;&nbsp; /*Đoạn Mã*/<br/> }</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
                Kỹ Thuật Rút Ngắn Với Arrow Function
              </h3>
            </div>
            <p>
              Đầu tiên là chúng ta sẽ đi vào viết một hàm theo cách thông thường:
            </p>
            <pre><code class="javascript"> function xinChao(ten) {<br/> &nbsp;&nbsp; console.log("Xin Chào Bạn " + ten);<br/> }</code></pre>
            <p class="mt-2">
              Cách rút gọn:
            </p>
            <pre><code class="javascript"> xinChao = ten => console.log("Xin Chào Bạn " + ten)</code></pre>

            <p class="mt-4">
              Ví dụ 2 là cách chúng ta sử dụng với lệnh <code>forEach</code>: 
            </p>
            <pre><code class="jvascript"> danhSach.forEach(function(phanTu){<br/> &nbsp;&nbsp;console.log(phanTu);<br/> });</code></pre>
            <p class="mt-2">
              Cách rút gọn:
            </p>
            <pre><code class="javascript"> danhSach.forEach(phanTu => console.log(phanTu));</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
                Kỹ Thuật Rút Ngắn Lũy Thừa Trong Javascript
              </h3>
            </div>
            <p>
              Thông thường khi bạn muốn thực hiện hành động lũy thữa một số thì ta sẽ sử dụng <code>Math.pow</code> như ví dụ sau đây:
            </p>
            <pre><code class="javascript"> Math.pow(2,2); /*Kết quả là 4*/<br/> Math.pow(2,3); /*Kết quả là 8*/</code></pre>
            <p>
              Và đây là cách rút gọn với việc sử dụng <code>**</code>:
            </p>
            <pre><code class="javascript"> 2**2 /*Kết quả là 4*/<br/> 2**3 /*Kết quả là 8*/</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
              Kỹ Thuật chuyển đổi từ kiểu dữ liệu chuỗi sang số
              </h3>
            </div>
            <p>
              Khi lập trình với javascript, nếu chúng ta muốn chuyển đổi kiểu dữ liệu từ chuỗi sang số thì sẽ dùng hai lệnh là 
              <code>parseInt</code> (Kiểu số nguyên) và <code>parseFloat</code> (Kiểu số thập phân) như ví dụ sau:
            </p>
            <pre><code class="javascript"> const so1 = parseInt("5");<br/> const so2 = parseInt("5.5");</code></pre>
            <p class="mt-2">
              Cách rút gọn (Bạn sẽ thêm dấu cộng phía trước chuỗi chứa số):
            </p>
            <pre><code class="javascript"> const so1 = +"5";<br/> const so2 = +"5.5";</code></pre>


            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
               Kỹ thuật rút ngắn khi thực hiện <code>return</code> trong hàm
              </h3>
            </div>
            <p>
              Đối với một hàm thông thường chúng ta sẽ sử dụng <code>return</code> để trả về một kết quả như sau đây:
            </p>
            <pre><code class="javascript"> function phepCong(a, b) {<br/> &nbsp;&nbsp; return a + b;<br/> }</code></pre>
            <p class="mt-2">
              Cách viết rút gọn:
            </p>
            <pre><code class="javascript"> const phepCong = (a, b) => (a + b);</code></pre>


            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
               Kỹ thuật rút ngắn số mũ thập phân
              </h3>
            </div>
            <p>
              Đoạn code dưới đây sẽ giúp bạn giảm được cách phải viết nhiều số 0 cho một số. Và để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
            </p>
            <pre><code class="javascript"> /*Cách viết rút gọn của các số*/<br/> 1e0 === 1;<br/> 1e1 === 10;<br/> 1e2 === 100;<br/> 1e3 === 1000;<br/> 1e4 === 10000;<br/> 1e5 === 100000;<br/> 1e6 === 1000000;</code></pre>
         
            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
               Sử dụng Spread Operator
              </h3>
            </div>
            <p>
              Khi bạn muốn nối mảng trong javascript thì sẽ sử dụng <code>concat</code> và sao chép một mảng sẽ sử dụng <code>slice</code> như ví dụ sau đây:
            </p>
            <pre><code class="javascript"> /*thực hiện nối mảng*/ <br/> var mang1 = [4,5,6];<br/> var mang2 = [1, 2, 3].concat(mang1); /*[1, 2, 3, 4, 5, 6]*/<br/><br/> /*Thực hiện sao chép mảng*/ <br/> var mang1 = [1, 2, 3];<br/> var mang2 = mang1.slice(); /*[1, 2, 3]*/</code></pre>
            <p class="mt-2">
              Còn đây là cách rút gọn khi ta sử dụng spread operator
            </p>
            <pre><code class="javascript">/*thực hiện nối mảng*/ <br/> var mang1 = [4,5,6];<br/> var mang2 = [1, 2, 3, ...mang1]; /*[1, 2, 3, 4, 5, 6]*/<br/><br/> /*Thực hiện sao chép mảng*/ <br/> var mang1 = [1, 2, 3];<br/> var mang2 = [...mang1]; /*[1, 2, 3]*/</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
               Kỹ thuật khai báo biến
              </h3>
            </div>
            <p>
             Thông thường chúng ta sẽ khai báo biến như sau:
            </p>
            <pre><code class="javascript"> let a;<br/> let b;<br/> let c = 4;</code></pre>
            <p class="mt-2">
              Cách viết rút gọn:
            </p>
            <pre><code class="javascript"> let a, b, c = 4;</code></pre>


            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
               Sử dụng <code>Object.assign</code>
              </h3>
            </div>
            <p>
              Khi bạn muốn gộp hai hay nhiều đối tượng và trong một object thì ta có thể sử dụng <code>Object.assign</code> như ví dụ sau đây nhé
            </p>
            <pre><code class="javascript"> let ho = {ho : "Nguyễn"};<br/> let ten = {ten : "An"};<br/> /*Thực hiện gộp hai đối tượng*/<br/> let hoTen = Object.assign(ho, ten); /*{ho: "Nguyễn", ten: "An"}*/</code></pre>


            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
               Sử dụng <code>Object.entries()</code>
              </h3>
            </div>
            <p>
              <code>Object.entries()</code> cho phép bạn có thể chuyển đổi các đối tượng thành các cặp giá trị mảng:
            </p>
            <pre><code class="javascript"> let doiTuong = {ho: "Nguyễn", ten: "An"};<br/> let mang = Object.entries(doiTuong); /*[["ho", "Nguyễn"], ["ten", "An"]]*/</code></pre>

          
            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
              Cách chuyển đổi số sang chuỗi
              </h3>
            </div>
            <p>
              Đoạn code dưới đây giúp chúng ta có thể chuyển đổi các kiểu dữ liệu trong Javascript sang dạng chuỗi:
            </p>
            <pre><code class="javascript"> let so = 5;<br/> let chuoi = "" + so; /*(typeof chuoi) : string*/</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
              Cách tự động gọi hàm
              </h3>
            </div>
            <p>
              Sau đây là đoạn mã giúp bạn có thể tự động gọi hàm trong Javascript:
            </p>
            <pre><code class="javascript">(function(){<br/> &nbsp;&nbsp; /*Đoạn mã thực thi*/<br/> })();</code></pre>

            <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
              <h3 class="text-primary ml-4 title-article-size">
                Kỹ thuật rút ngắn lấy ký tự trong chuỗi 
              </h3>
            </div>
            <p>
              Thông thường khi chúng ta muốn lấy ký tự trong chuỗi thì sẽ sử dụng <code>charAt()</code> như ví dụ sau đây:
            </p>
              <pre><code class="javascript"> 'chuỗi'.charAt(1) /*h*/</code></pre>
            <p>
              Cách rút gọn:
            </p>
            <pre><code class="javascript"> 'chuỗi'[1] /*h*/</code></pre>




            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ cung cấp thêm cho bạn những kỹ thuật viết mã Javascript
              hữu
              ích
              dành
              cho
              việc
              phát
              triển, thiết kế web
              và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>



  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>

<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>