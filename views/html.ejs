<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i> Tìm Hiểu Về Function Object Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình đi vào tìm hiểu về khái niệm cũng như các phương thức của Function Object
                trong
                ngôn
                ngữ lập trình Javascript để phát triển web nhé.</i>
            </p>
            <p>
              Trong ngôn ngữ Javascript thì tất cả các <b>function (hàm)</b> đều là <b>object (đối tượng)</b>. Do đó
              chúng ta có thể
              áp dụng các phương thức và thuộc tính của object vào cho function. Ví dụ như việc chúng ta gán hàm vào một
              biến hay vào một phần tử trong mảng hoặc xem hàm như một tham số để truyền vào cho một hàm khác...
            </p>
            <p>
              Bây giờ chúng ta cùng nhau đi tìm hiểu <b>function object</b> nhé.
            </p>


            <div class="row">
              <div class="col-sm-12 bg-light p-2 mb-4 shadow rounded-pill">
                <h3 class="text-primary ml-4 title-article-size">Kiểm tra Function Object:</h3>
              </div>
            </div>

            <p>
              Bây giờ chúng ta sẽ làm một bài kiểm tra nhỏ để xác định function là một trường hợp của object trong
              javascript thông qua việc sử dụng hai phương thức là
              <b><code>typeof</code></b> và <b><code>instanceof</code></b>. Để hiểu rõ hơn bạn xem đoạn code sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> function xinChao() {<br/> &nbsp;&nbsp;&nbsp;console.log("Xin Chào Các Bạn");<br/> } <br/><br/> console.log(typeof xinChao);<br/> console.log(xinChao instanceof Object)</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589943604/Function-Object/kiem-tra-function-la-object_bf4xyv.png"
              alt="Kiểm tra function là một object">
            <p class="mt-4">
              Qua ví dụ trên chúng ta có thể thấy hàm là một loại đối tượng đặc biệt trong object. Tiếp theo chúng ta sẽ 
              đi vào tìm hiểu các thuộc tính của <b><i>function object</i></b> ở bên dưới nhé.
            </p>

            <div class="row">
              <div class="col-sm-12 bg-light p-2 mb-4 shadow rounded-pill">
                <h3 class="text-primary ml-4 title-article-size">Thuộc tính Length Trong Function Object:</h3>
              </div>
            </div>
            <p>
              Thuộc tính <b>length</b> được sử dụng trong hàm để xác định <b>số lượng tham số</b> được truyền vào trong hàm đó.
              Để dễ hình dung bạn xem đoạn code sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> function xinChao(a, b) {<br/> &nbsp;&nbsp;&nbsp;console.log(a + b);<br/> } <br/><br/> console.log(xinChao.length);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589946418/Function-Object/length-cua-function-object_s7kqil.png"
              alt="Chiều dại một function object">
            <p class="mt-4">
              Nhưng nếu bạn sử dụng tham số <b>rest parameters</b> thì nó sẽ không được tính vào chiều dài của hàm nha.
              Bạn có thể tham khảo <b>rest parameters</b> ở <a href="https://www.niemvuilaptrinh.com/article/Spread-Operator-Va-Rest-Parameters-Trong-Javascript" title="rest parameters">đây nhé</a>.
            </p>


            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> function xinChao(a, ...b) {<br/> &nbsp;&nbsp;&nbsp;console.log(a + b);<br/> } <br/><br/> console.log(xinChao.length);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589946675/Function-Object/length-cua-function-object-vs-rest-parameters_dczdcx.png"
              alt="Chiều dại một function object với rest parameters">





























            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được <b>Spread Operator Và Rest Parameters</b>
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>