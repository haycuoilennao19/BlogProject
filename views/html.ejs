<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i>Các Phương Thức Number(Số) Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình đi vào tìm hiểu khái niệm cũng như các phương thức sử dụng với số trong
                ngôn
                ngữ lập trình Javascript để phát triển web nhé.</i>
            </p>

            <div class="row">
              <div class="col-sm-12 bg-light p-2 mt-4 mb-4 shadow rounded-pill">
                <h4 class="text-primary ml-4 title-article-size">Các Phương Thức Number(Số) Trong Javascript</h4>
              </div>
            </div>
            <p>
              Bạn nên tham khảo lại về định nghĩa kiểu dữ liệu số và các thuộc tính của nó trước khi ta đi vào
              tìm hiểu các phương thức được sử dụng cho kiểu dữ liệu này nhé. Đường dẫn tham khảo:
              <a href="https://www.niemvuilaptrinh.com/article/Cac-Kieu-Du-Lieu-Trong-Javascript"
                title="Kiểu dữ liệu số">Kiểu dữ liệu số</a>.
            </p>
            <h5 class="text-white bg-secondary p-2 shadow  title-article-size rounded">
              Phương thức <b>toFixed()</b> trong Number(Số):
            </h5>

            <p class="mt-4">
              Phương thức <b><code>toFixed()</code></b>
              thường được áp dụng đối với các <b>số thập phân</b>. Nó giúp chúng ta xác định bao nhiêu số
              đằng sau dấu thập phân(<b><code>.</code></b>) sẽ được hiển thị và kết quả trả về là một số với kiểu dữ
              liệu là <b>chuỗi</b>
              . Để hiểu rõ hơn bạn xem cú pháp của nó
              sau đây nhé:
            </p>
            <pre><code class="javascript"> (Số).toFixed(Số lượng number mà ta muốn hiển thị);</code></pre>
            <p>
              Bây giờ chúng ta sẽ đi vào ví dụ thực tế để hiểu về cách sử dụng nó nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let tongGia = 0.56894;<br/> let tongGiaChuyenDoi = tongGia.toFixed(2);<br/><br/> console.log(tongGiaChuyenDoi);<br/> console.log(typeof tongGiaChuyenDoi);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589251372/Number%20Of%20Javascript/phuong-thuc-toFixed_-trong-Javascript_qtwh1v.png"
              alt="Phương thức toFixed() trong javascript">

            <p class="mt-4">
              Tại sao kết quả là <b>0.57</b> chứ không phải <b>0.56</b> ?
            </p>
            <p>
              Thì ở đây mình xin giải thích là khi ta chọn <b>2</b> chữ số sau dấu thập phân thì phương thức này
              sẽ xem xét giá trị của chữ số thứ <b>3</b> sau dấu thập phân nếu:
              <ul>
                <li><b>Nếu nó >= 5 </b>: thì số trước nó tăng lên một đơn vị.</li>
                <li><b>Nếu nó &#60; 5 </b> : thì số trước nó giữ nguyên giá trị.</li>
              </ul>
              Do đó số <b>8 > 5</b> nên kết quả sẽ là <b>0.57</b>.
            </p>
            <p>
              Để hiểu nhiều hơn chúng ta hãy xem ví dụ với các số khác nhau trong phương thức
              <b><code>toFixed()</code></b> ở đoạn code dưới đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let soThapPhan = 124.654;<br/><br/> console.log(soThapPhan.toFixed(0));<br/> console.log(soThapPhan.toFixed(1));<br/> console.log(soThapPhan.toFixed(2));<br/> console.log(soThapPhan.toFixed(8));</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589253710/Number%20Of%20Javascript/vi-du-toFixed_-trong-Javascript_majexs.png"
              alt="Các ví dụ về toFixed() trong javascript">

            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Phương thức <b>toPrecision()</b> trong Number(Số):
            </h5>
            <p>
              Phương thức này có cách hoạt động khá giống với phương thức <b><code>toFixed()</code></b>
              , điểm khác biệt chú ý ở đây là nó cho phép chúng ta xác định <b>chiều dài</b> của số chứ không
              phải là <b>xác định bao nhiêu số đằng sau dấu thập phân</b>. Trước khi đi vào so sánh thì bạn xem cú pháp
              của nó trước nhé:
            </p>
            <pre><code class="javascript">(Số).toPrecision(Chiều dài của số);</code></pre>

            <p>
              Bây giờ ta sẽ đi vào ví dụ cụ thể so sánh hai phương thức trên nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let soTong = 2.548;<br/><br/> console.log(soTong.toPrecision(2));<br/> console.log(soTong.toFixed(2));</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589254387/Number%20Of%20Javascript/phuong-thuc-toPrecision_-trong-Javascript_vtqekr.png"
              alt="Phương Thức toPrecision() trong javascript">
            <p class="mt-4">
              Với tham số <b>chiều dài(length)</b> trong phương thức <b><code>toPrecision</code></b> thì bạn chỉ
              sử dụng được <b>từ 1 đến 100</b> thôi nhé.
            </p>
            <p class="mt-4">
              Tiếp theo chúng ta sẽ đi vào ví dụ cụ thể khi sử dụng phương thức <b><code>toPrecision()</code></b> với
              nhiều chiều dài khác nhau
              ở đoạn code sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let soThapPhan = 124.654;<br/><br/> console.log(soThapPhan.toPrecision(3));<br/> console.log(soThapPhan.toPrecision(4));<br/> console.log(soThapPhan.toPrecision(8));<br/> console.log(soThapPhan.toPrecision(0));/* Sẽ xảy ra lỗi*/<br/></code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589255243/Number%20Of%20Javascript/vi-du-toPrecision_-trong-Javascript_wfvtei.png"
              alt="Các ví dụ về toPrecision() trong javascript">

            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Phương thức <b>parseInt()</b> trong Number(Số):
            </h5>
            <p>
              Phương thức <b><code>parseInt()</code></b> giúp chúng ta chuyển các kiểu dữ liệu khác (chuỗi, boolean...)
              sang <b>kiểu số nguyên</b>. Để hiểu rõ hơn bạn xem cú pháp sau nhé:
            </p>
            <pre><code class="javascript"> parseInt(Kiểu dữ liệu ta muốn chuyển sang số nguyên);</code></pre>
            <p>
              Bây giờ chúng ta đi vào ví dụ để hiểu hơn nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> console.log(parseInt("20"));<br/> console.log(parseInt("20.68"));</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589256111/Number%20Of%20Javascript/phuong-thuc-parseInt_-trong-Javascript_jbms2r.png"
              alt="Phương thức parseInt() trong javascript">

            <p class="mt-4">
              Nếu như ta có chuỗi là <b>"20 học sinh"</b> và <b>"học sinh thứ 20"</b> thì bạn nghĩ phương thức này có
              thể chuyển sang kiểu số được không?
            </p>
            <p>
              Để trả lời câu hỏi trên chúng ta thử đi vào ví dụ với hai chuỗi trên để xem sao nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> console.log(parseInt("20 học sinh"));<br/> console.log(parseInt("học sinh thứ 20"));</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589256455/Number%20Of%20Javascript/chuyen-chuoi-sang-so-parseInt_-trong-Javascript_ugkomm.png"
              alt="Chuyển chuỗi sang số bằng phương thức parseInt() trong javascript">
            <p class="mt-4">
              Vậy chúng ta có thể rút ra kết luận là đối với chuỗi <b>có số đầu tiên</b> thì phương thức này có thể
              chuyển sang kiểu <b>number</b> và bỏ các ký tự chữ còn lại.
              Còn nếu chuỗi <b>có chữ đầu tiên</b> thì nó sẽ trả về kiểu dữ liệu <b>NaN(Not a Number)</b>.
            </p>
            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Phương thức <b>parseFloat()</b> trong Number(Số):
            </h5>
            <p>
              Phương thức <b><code>parseFloat()</code></b> giúp chúng ta chuyển các kiểu dữ liệu khác (chuỗi,
              boolean...)
              sang <b>kiểu số số thập phân</b>. Để hiểu rõ hơn bạn xem cú pháp sau nhé:
            </p>
            <pre><code class="javascript"> parseFloat(Kiểu dữ liệu ta muốn chuyển sang số thập phân);</code></pre>
            <p>
              Bây giờ để hiểu rõ hơn bạn cùng mình xem ví dụ sau đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> console.log(parseFloat("12.65"));<br/> console.log(parseFloat("1.5rem"));<br/> console.log(parseFloat("1.2.6"));</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589257471/Number%20Of%20Javascript/phuong-thuc-parseFloat_-trong-Javascript_jyoq7r.png"
              alt="Phương thức parseFloat() trong javascript">
            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Những Cách Viết Khác Number(Số) Trong Javascript:
            </h5>
            <p>
              Ví dụ khi bạn ghi một số có chiều dài quá lớn như đơn vị triệu, đơn vị tỷ thì việc thường nhập sai là
              điều khó tránh khỏi. Vị dụ như sau đây:
            </p>
            <pre><code class="javascript"> let haiTy = 2000000000;</code></pre>
            <p>
              Trong Javascript có cho phép chúng ta sử dụng chữ <b>e</b> để xác định có bao nhiều <b>số 0</b>
              được hiển thị trong number. Để hiểu rõ hơn bạn xem đoạn code sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let haiTy = 2000000000;<br/> console.log(haiTy);<br/><br/> let haiTyChuyenDoi = 2e9;<br/> console.log(haiTyChuyenDoi);</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589258065/Number%20Of%20Javascript/su-dung-e-trong-number-Javascript_u6phga.png"
              alt="Sử dụng e trong số  javascript">
            <p class="mt-4">
              Ở đây mình sẽ giải thích một tý về cách hoạt động của chữ <b>e</b> trong kiểu dữ liệu số ở dưới đây nhé:
            </p>
            <pre><code class="javascript"> 2e9 = 2 * 1000000000; <br/> 1e3 = 1 * 1000;</code></pre>


            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Sử Dụng Một Số Phương Thức Math Trong Number(Số) Javascript:
            </h5>
            <p class="mt-4">
              Đầu tiên là mình muốn giới thiệu đến các bạn ba phương thức Math giúp chúng ta có thể dễ dàng làm <b>tròn số</b> là:
            </p>
            <table class="table">
              <thead class="thead-dark">
                <tr>
                  <th scope="col"></th>
                  <th scope="col">Math.floor</th>
                  <th scope="col">Math.ceil</th>
                  <th scope="col">Math.round</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th scope="row">Ý Nghĩa</th>
                  <td>Làm tròn số xuống.</td>
                  <td>Làm tròn số lên.</td>
                  <td>Làm tròn tới số gấn nhất.</td>
                </tr>
                <tr>
                  <th scope="row">Cú Pháp</th>
                  <td>Math.floor(Số)</td>
                  <td>Math.ceil(Số)</td>
                  <td>Math.round(Số)</td>
                </tr>
              </tbody>
            </table>
            <p class="mt-4">
              Bây giờ để hiểu rõ hơn chúng ta đi vào  ví dụ cụ thể sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let so1 = 4.1;<br/> let so2 = 4.6;<br/><br/> console.log(`Sử dụng Math.floor với số ${so1} : ` + Math.floor(so1));<br/> console.log(`Sử dụng Math.floor với số ${so2} : ` + Math.floor(so2));<br/><br/> console.log(`Sử dụng Math.ceil với số ${so1} : ` + Math.ceil(so1));<br/> console.log(`Sử dụng Math.ceil với số ${so2} : ` + Math.ceil(so2));<br/><br/> console.log(`Sử dụng Math.round với số ${so1} : ` + Math.round(so1));<br/> console.log(`Sử dụng Math.round với số ${so2} : ` + Math.round(so2)); </code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589273387/Number%20Of%20Javascript/su-dung-math-trong-number-Javascript_e4zeql.png"
              alt="Sử dụng Math() trong số  javascript">
            <p class="mt-4">
              Tùy vào trường hợp thực tế mà bạn lựa chọn phương thức làm tròn số cho hợp lý nhé.
            </p>
            <p class="text-primary">
              Sử Dụng Math.random():
            </p>
            <p>Tạo một số <b>ngẫu nhiên</b> từ 0 đến 1 (không có số 1 nhé). Bây giờ để hiểu rõ hơn bạn xem đoạn cod sau nhé:</p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> console.log(Math.random());<br/> console.log(Math.random()); </code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589274011/Number%20Of%20Javascript/su-dung-math.random_-trong-number-Javascript_gofdg4.png"
              alt="Sử dụng Math.random() trong số  javascript">
            <p class="mt-4 text-primary">
              Sử Dụng Math.max() và Math.min():
            </p>
            <p>
              Giúp chúng ta trả về giá trị lơn nhất hay nhỏ nhất với các số đã cho. Để hiểu rõ hơn bạn xem cú pháp sau nhé:
            </p>
            <pre><code class="javascript"> Math.max(Số 1, Số 2, Số 3... Số n)<br/> Math.min(Số 1, Số 2, Số 3... Số n)</code></pre>
            <p>
              Bây giờ để hiểu rõ hơn chúng ta cùng di vào ví dụ sau nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let soLonNhat = Math.max(20, 50, 44, 60, 90, 80);<br/> let soNhoNhat = Math.min(20, 50, 44, 60, 90, 80);<br/><br/> console.log(`Số lớn nhất là : ${soLonNhat}`)<br/> console.log(`Số nhỏ nhất là : ${soNhoNhat}`)</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589274450/Number%20Of%20Javascript/math.min-math.max-trong-number-Javascript_lulq4w.png"
              alt="Sử dụng Math.min() và Math.max() trong số  javascript">

















            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Chuển đổi Number(Số) Sang Kiểu Chuỗi Trong Javascript:
            </h5>
            <p>
              Thông thường chúng ta sẽ sử dụng phương pháp <b><code>toString()</code></b> để chuyển đổi
              kiểu dữ liệu từ số sang chuỗi. Nhưng trong phần này mình muốn giới thiệu thêm về phương thức
              <b><code>toString</code></b> khi sử dụng
              với <b>tham số</b>. Để hiểu rõ hơn bạn xem cú pháp sau nhé:
            </p>
            <pre><code class="javascript"> (Number).toString(Tham Số);</code></pre>
            <p>
              Với <b>tham số</b> ở đây nằm trong khoảng từ <b>2 đến 36</b> và thông thường chúng ta sẽ sử dụng
              các tham số dưới đây để sử dụng trong hệ thống số là:
              <ul>
                <li>
                  Phương thức <b><code>toString()</code></b> nếu không có tham số thì sẽ mặc định là <b>10</b>.
                </li>
                <li>
                  <b>tham số = 2</b> thì được dùng để hiển thị số dưới dạng nhị phân(Chỉ bao gồm số 0 và số 1).
                </li>
                <li>
                  <b>tham số = 8</b> được dùng để hiển thị số bát phân.
                </li>
                <li>
                  <b>tham số = 16</b> được dùng để hiển thị hex color, mã hóa ký tự...
                </li>
                <li>
                  <b>tham số = 32</b> được dùng để hiển thị số thông qua các chữ cái latin.
                </li>
              </ul>
            </p>
            <p>
              Nếu thấy khó hiểu cũng không sao nha vì mình viết thêm phần này để giúp bạn tham khảo
              chứ đối với lập trình web bình thường cũng ít khi sử dụng tới nha. Bây giờ chúng ta cùng nhau đi vào tìm
              hiểu
              ví dụ thực tế sau đây nhé:
            </p>
            <p>
              <mark class="p-1"><b>Đoạn Code:</b></mark>
            </p>
            <pre><code class="javascript"> let num = 140;<br/> console.log(num.toString(2));<br/> console.log(num.toString(8));<br/> console.log(num.toString(16));<br/> console.log(num.toString(32));<br/> console.log(num.toString(10));//Sử dụng mặc định</code></pre>
            <p class="mt-4">
              <mark class="p-1"><b>Kết Quả:</b></mark>
            </p>
            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589272042/Number%20Of%20Javascript/su-dung-toString_-trong-number-Javascript_p4unir.png"
              alt="Sử dụng tham số với toString() trong số  javascript">




































            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được cách <b>sử dụng các phương thức đối với số</b>
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>