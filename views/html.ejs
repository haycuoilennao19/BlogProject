<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i> Các Phương Thức Chuỗi Phần 2 Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình đi vào tìm hiểu thêm các phương thức được sử dụng   đối với chuỗi trong
                ngôn
                ngữ lập trình Javascript để phát triển web nhé.</i>
            </p>

            <div class="row">
              <div class="col-sm-12 bg-light p-2 mt-4 mb-4 shadow rounded-pill">
                <h4 class="text-primary ml-4 title-article-size">Chuỗi Trong Javascript</h4>
              </div>
            </div>
            <h5 class="text-white bg-secondary p-2 shadow  title-article-size rounded">
              Phương thức <b>substring()</b> trong Chuỗi(String):
            </h5>

            <p class="mt-4">
              Phương thức <b><code>substring()</code></b> được sử dụng để trả về một chuỗi con nằm trong chuỗi
              bằng cách xác định vị trí chỉ mục <b>bắt đầu</b> và <b>kết thúc</b>. Để hiểu rõ hơn bạn xem cú pháp của nó
              sau đây nhé:
            </p>
            <pre><code class="javascript"> (Chuỗi).substring(Vị trí chỉ mục đầu tiên, Vị trí chỉ mục kết thúc);</code></pre>
            <p>
              Ở đây mình sẽ giải thích một tý về cú pháp trên là :
              <ul>
                <li><b>Vị trí chỉ mục bắt đầu</b>: là vị trí chỉ mục của ký tự đầu tiên trong chuỗi con mà chúng ta muốn
                  lấy.</li>
                <li><b>Vị trí chỉ mục kết thúc</b>: là vị trí chỉ mục cuối cùng trong chuỗi con và không được bao gồm
                  trong chuỗi con. Bạn có thể hiểu nôm na là
                  chuỗi con sẽ <b>không chứa ký tự với vị trí chỉ mục cuối cùng</b> khi ta sử dụng phương thức
                  <b><code>substring()</code></b> .</li>
              </ul>
            </p>
            <p>
              Bây giờ để nắm rõ hơn chúng ta sẽ đi vào ví dụ thực tế với hình ảnh minh họa dưới đây nhé:
            </p>
            <img class=" lazyload" height="250"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588948422/Method-String-JS/vi-tri-chi-muc-chuoi-js_gwrdpb.svg"
              alt="Ví dụ minh họa vị trí chỉ mục trong javascript">
            <p class="mt-4">
              Vậy để lấy chuỗi con <b>"JAVA"</b> trong <b>"JAVASCRIPT"</b> thì bạn sẽ phải lấy từ vị trí chỉ mục
              <b>0</b> đến vị trí chỉ mục thứ
              <b>4</b> chứ không phải vị trí chỉ mục thứ <b>3</b> nha. Để hiểu rõ hơn bạn hãy cùng mình đi vào ví dụ cụ
              thể sau đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = 'JAVASCRIPT';<br/> let chuoiCon1 = chuoi.substring(0,4);<br/> let chuoiCon2 = chuoi.substring(0,3);<br/><br/> console.log(chuoiCon1);<br/> console.log(chuoiCon2);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589164003/Method-String-JS/vi-du--substring-trong-chuoi-js_ackkts.png"
              alt="Sử dụng substring trong chuỗi javascript">
            <p class="mt-4">
              Như bạn thấy ở ví dụ trên thì chúng ta có thể rút ra một lưu ý là khi bạn muốn lấy ký tự cuối cùng của
              chuỗi con bằng phương thức <b><code>substring()</code></b> thì
              thì ta sẽ lấy <b>vị trí chỉ mục ký tự cuối cùng ta muốn lấy cộng với 1</b>.
            </p>

            <p>
              Tiếp theo chúng ta sẽ đi vào ví dụ nhiều chữ trong một chuỗi bằng ví dụ dưới đây nhé:
            </p>

            <pre><code class="javascript"> let chuoi = 'Xin Chào';<br/> let chuoiCon = chuoi.substring(0,3);<br/><br/> console.log(chuoiCon);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589162382/Method-String-JS/vi-du-substring-trong-js_uod2le.png"
              alt="Sử dụng substring trong chuỗi js">
            <p class="mt-4">
              Ở đây mình có lưu ý nhỏ là:
              <ul>
                <li>Đầu tiên chúng ta gán giá trị "Xin Chào" cho biến <b><code>chuoi</code></b>.</li>
                <li>Tiếp theo chúng ta sẽ sử dụng phương thức <b><code>substring</code></b> để trả về giá trị cho biến
                  <b><code>chuoiCon</code></b>.</li>
                <li>Phương thức <b><code>substring</code></b> sẽ lấy giá trị chuỗi con từ vị trí chỉ mục <b>0</b>
                  đến vị
                  trí chỉ mục <b>3</b> (Không bao gồm ký tự vị trí chỉ mục thứ <b>3</b> có trong chuỗi con).
                  Với vị trí chỉ mục sẽ <b>bắt đầu từ số 0 nhé</b>.
                </li>
              </ul>
            </p>
            <h6 class="text-primary mt-4"><b><u>Chỉ sử dụng 1 tham số trong <code>substring()</code></b>:</u></b></h6>
            <p>
              Bạn xem cú pháp sử dụng 1 tham số trong phương thức <b><code>substring</code></b> dưới đây nhé:
            </p>
            <pre><code class="javascript"> (Chuỗi).substring(Vị trí bắt đầu);</code></pre>
            <p>
              Ở đây nó sẽ trả về một chuỗi con từ vị trí chỉ mục bắt đầu đến <b>vị trí cuối cùng trong chuỗi</b>.
              Mình có lưu ý nhỏ là <b>khoảng trắng</b> cũng là một ký tự trong chuỗi nha. Bây giờ để hiểu rõ hơn
              chúng ta hãy cùng đi vào ví dụ dưới đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = 'Xin Chào';<br/> let chuoiCon = chuoi.substring(4);<br/><br/> console.log(chuoiCon);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589165633/Method-String-JS/vi-du-substring-mot-tham-so-trong-chuoi-js_qay2se.png"
              alt="substring với một tham số trong chuỗi js">

            <h6 class="text-primary mt-4"><b><u>Hoán đổi vị trí chỉ mục trong <code>substring()</code></b>:</u></b></h6>
            <p>
              Khi mà bạn thiết lập vị trí chỉ mục bắt đầu <b>lớn hơn</b> vị trí chỉ mục kết thúc thì nó sẽ tự động hoán
              đổi vị trí
              nghĩa là vị trí chỉ mục bắt đầu sẽ đổi thành vị trí chỉ mục kết thúc và ngược lại.
              Bây giờ để dễ hình dung bạn xem ví dụ sau đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = 'Xin Chào';<br/> let chuoiCon = chuoi.substring(3, 0);<br/><br/> console.log(chuoiCon);</code></pre>
            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589166675/Method-String-JS/hoan-doi-vi-tri-trong-substring-js_db8h4c.png"
              alt="Hoán đổi vị trí chỉ mục trong substring chuỗi js">
            <h6 class="text-primary mt-4"><b><u>Khi hai vị trí chỉ mục bằng nhau trong
                  <code>substring()</code></b>:</u></b></h6>
            <p>
              Khi bạn thiết lập vị trí chỉ mục bắt đầu <b>bằng</b> với vị trí chỉ mục kết thúc thì nó sẽ trả về <b>một
                chuỗi rỗng</b>.
              Để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = 'Xin Chào';<br/> let chuoiCon = chuoi.substring(4,4);<br/><br/> console.log(chuoiCon);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589166953/Method-String-JS/hai-vi-tri-chi-muc-bang-nhau-trong-substring-js_dy0uxm.png"
              alt="hai vị trí chỉ mục bằng nhau trong substring">

            <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
              Phương thức <b>slice()</b> trong Chuỗi(String):
            </h5>
            <p>
              Các đặc điểm của phương thức <b><code>slice()</code></b> khá giống với <b><code>substring()</code></b>.
              Nhưng điểm khác biệt chính là phương thức <b><code>slice</code></b> cho phép vị trí chỉ mục là <b>số
                âm</b> và
              nó sẽ không chấp nhận nếu vị trí chỉ mục bắt đầu <b>lơn hơn</b> vị trí chỉ mục kết thúc. Bây giờ để hiểu
              rõ hơn chúng ta
              đi vào cú pháp nó nhé:
            </p>
            <pre><code class="javascript"> (Chuỗi).slice(Vị trí chỉ mục bắt đầu, Vị trí chỉ mục kết thúc)</code></pre>
            <p>
              Các tính chất của nó cũng giống như phương thức <b><code>substring()</code></b> và để hiểu rõ hơn chúng ta
              cùng nhau xem ví dụ sau đây nhé:
            </p>

            <pre><code class="javascript"> let chuoi = "JAVASCRIPT";<br/> let chuoiCon1 = chuoi.slice(0,4);<br/> let chuoiCon2 = chuoi.slice(4);<br/><br/> console.log(chuoiCon1);<br/> console.log(chuoiCon2);</code></pre>
            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589168544/Method-String-JS/phuong-thuc-slice-trong-chuoi-js_yirsnu.png"
              alt="Phương thức slice() trong chuỗi javascript">
            <p class="mt-4">
              Tiếp theo chúng ta sẽ đi vào ví dụ sử dụng <b>số âm</b> cho các vị trí chỉ mục. Lúc này nó sẽ bắt đầu
              từ vị trí chỉ mục <b>cuối chuỗi</b> đến <b>đầu chuỗi</b> (Từ phải sang trái). Để hiểu rõ hơn bạn xem ví dụ
              sau nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "JAVASCRIPT";<br/> let chuoiCon = chuoi.slice(-5,-1);<br/><br/> console.log(chuoiCon);</code></pre>

            <p>
              Ở đoạn code trên thì nó sẽ bắt đầu từ vị trí thứ 5 <b>từ bên phải</b> đến vị trí thứ 1 <b>từ bên phải</b>.
              Và bạn theo dõi kết quả ở dưới đây nhé:
            </p>



            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589169151/Method-String-JS/so-am-trong-slice-trong-chuoi-js_cvaan2.png"
              alt="Sử dụng số âm trong Phương thức slice()">
            <p class="mt-4">
              Ở đây mình có lưu ý là:
              <ul>
                <li>Nếu cách trên khó hiểu bạn hình dung như sau: với ví dụ trên thì vị trí chỉ mục đều là số âm.</li>
                <li>Lúc này vị trí chỉ mục bắt đầu = <b>Vị trí chỉ mục bắt đầu (Số âm) + Chiều dài của chuỗi</b>.
                  Vậy kết quả là vị trí chỉ mục bắt đầu = -5 + 10 = <b>5</b> .
                </li>
                <li>Vị trí chỉ mục kết thúc = <b>Vị trí chỉ mục kết thúc (Số âm) + Chiều dài của chuỗi</b>.
                  Vậy kết quả là vị trí chỉ mục kết thúc = -1 +10 = <b>9</b> .
                </li>
                <li>
                  Ta suy ra là <b>chuoi.slice(-5,-1)</b> sẽ bằng với <b>chuoi.slice(5,9)</b>.
                </li>
              </ul>
            </p>
            <p>
              Bây giờ chúng ta thử xem kết quả của hai phương thức trên sao nhé:
            </p>


            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589169911/Method-String-JS/vi-tri-chi-muc-am-trong-slice_tofla9.png"
              alt="Sử dụng số âm với vị trí chỉ mục trong Phương thức slice()">
            <p class="mt-4">
              Khác biệt khi hoán đổi vị trí chỉ mục giữa hai phương thức <b><code>slice()</code></b> và <b><code>substring()</code></b>:
            </p>
            <pre><code class="javascript"> let chuoi = "JAVASCRIPT";<br/> let chuoiCon1 = chuoi.slice(6, 2);<br/> let chuoiCon2 = chuoi.substring(6,2);<br/><br/> console.log(chuoiCon1);<br/> console.log(chuoiCon2); </code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589170300/Method-String-JS/so-sanh-slice_-va-substring_-js_endgt6.png"
              alt="So sánh pương thức slice() và substring() trong chuỗi javascript">
            <p class="mt-4">
              Như bạn thấy thì đối với phương thức <b><code>slice()</code></b> thì sẽ trả về <b>chuỗi rỗng</b> nếu 
              vị trí chỉ mục bắt đầu  <b>lớn hơn</b> vị trí chỉ mục kết thúc.
            </p>

            <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
              Phương thức <b>substr()</b> trong Chuỗi(String):
            </h5>
            <p>
              Phương thức này cũng trả về chuỗi con nhưng dựa vào vị trí chỉ mục bắt đầu và chiều dài của chuỗi con mà chúng ta muốn lấy.
              Để hiểu rõ hơn bạn xem cú pháp sau nhé:
            </p>
            <pre><code class="javascript"> (Chuỗi).substr(Vị trí chỉ mục bắt đầu, Độ dài chuỗi con mà ta muốn lấy);</code></pre>
            <p>
              Để hiểu rõ hơn giờ bạn cùng mình xem ví dụ sau đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "JAVASCRIPT";<br/> let chuoiCon = chuoi.substr(4,5);<br/><br/> console.log(chuoiCon);<br/> console.log(chuoiCon.length);</code></pre>
            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589170988/Method-String-JS/vi-du-substr_-js_tsggkw.png"
              alt="Ví dụ substr() trong chuỗi javascript">
            <p class="mt-4">
              Sự khác biệt giữa <b><code>substr</code></b> và <b><code>substring</code></b> là phương thức 
              <b><code>substr</code></b> cho phép chúng ta sử dụng <b>số âm cho tham số đầu tiên</b> còn phương thức  <b><code>substring</code></b> thì không.
              Để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "JAVASCRIPT";<br/> let chuoiCon = chuoi.substr(-4, 4);<br/><br/> console.log(chuoiCon);</code></pre>
            <p class="mt-4">
              Ở đây nó sẽ bắt đầu vị trí thứ 4 <b>từ bên phải</b> và lấy <b>4 ký tự</b> trong chuỗi. Để hiểu rõ hơn bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589171386/Method-String-JS/so-sanh-substr_-va-substring_-js_czayjm.png"
              alt="So sánh substr() với substring() trong chuỗi javascript">

            <p class="mt-4">
              Vậy chúng ta có thể rút ra khi sử dụng 3 phương thức trên với <b>số âm</b> là:
            </p>
            <table class="table table-dark">
              <thead>
                <tr>
                  <th scope="col">Phương Thức</th>
                  <th scope="col">Số Âm</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>slice()</td>
                  <td>Chấp nhận số âm cho tất cả tham số.</td>
                </tr>
                <tr>
                  <td>substring()</td>
                  <td>Các số âm sẽ tự động chuyển sang giá trị là <b>0</b>.</td>
                </tr>
                <tr>
                  <td>substr()</td>
                  <td>Chấp nhận tham số đầu tiên là số âm.</td>
                </tr>
              </tbody>
            </table>

            <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
              Phương thức <b>trim()</b> trong Chuỗi(String):
            </h5>
            <p>
              Phương thức này giúp chúng ta loại bỏ những khoảng trắng phía trước và sau của chuỗi.
              Để hiểu rõ hơn bạn xem ví dụ cụ thể sau đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "     Xin Chào     ";<br/> let chuoiCon = chuoi.trim();<br/><br/> console.log(chuoi);<br/> console.log(chuoiCon);</code></code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589179546/Method-String-JS/su-dung-trim-js_h7akzv.png"
              alt="Phương thức trim() trong chuỗi javascript">
              <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
                Phương thức <b>replace()</b> trong Chuỗi(String):
              </h5>
              <p>
                Phương thức này giúp bạn thay thế  giá trị   trong chuỗi bằng một giá trị mới nếu thỏa mãn một biểu thức 
                hay một chuỗi mà chúng ta đưa vào.
                Để hiểu rõ hơn bạn xem cú pháp sau nhé:
              </p>
              <pre><code class="javascript"> (Chuỗi).replace(Chuỗi cần thay thế, Chuỗi thay thế);</code></pre>
              <p>
                Để dễ hình dung hơn bạn xem ví dụ sau đây nhé:
              </p>
              <pre><code class="javascript"> let chuoi = "Xin Chào Thế Giới";<br/> let chuoiCon = chuoi.replace("Thế Giới", "Các Bạn");<br/><br/> console.log(chuoiCon);</code></pre>

              <p class="mt-4">
                Bạn xem kết quả bên dưới nhé:
              </p>
  
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589180620/Method-String-JS/su-dung-replace_-trong-chuoi-js_pdlyxl.png"
                alt="Phương thức replace() trong chuỗi javascript">
              <p class="mt-4">
               Ngoài ra chúng ta cũng có thể sử dụng <b>biểu thức chính quy(regular expressions ) </b> để tìm  chuỗi con phù hợp  mà chúng ta muốn thay thế.
               Phần này mình sẽ có một bài riêng để nói về nó nha. Bây giờ chúng ta hãy cùng nhau tìm hiểu thông qua ví dụ thực tế sau đây nhé:

              </p>
              <pre><code class="javascript"> let chuoi = "Xin Chào Thế Giới";<br/> let chuoiCon = chuoi.replace(/Thế Giới/g, "Các Bạn");<br/><br/> console.log(chuoiCon);</code></pre>

              <p class="mt-4">
                Bạn xem kết quả bên dưới nhé:
              </p>
  
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589181555/Method-String-JS/su-dung-regex-trong-replace_-trong-chuoi-js_xbo7zc.png"
                alt="Phương thức replace() với regex trong chuỗi javascript">
              <p class="mt-4">
               Một điều bạn cần lưu ý là  nếu tìm kiếm theo chuỗi thì phương thức này sẽ <b>phân biệt chữ in hoa và chữ in thường</b>. Ngoài ra nó cũng chỉ thay thế <b>giá trị đầu tiên</b> phù hợp được tìm thấy  ở trong chuỗi.
               Để nắm rõ hơn bạn xem đoạn code sau nhé:
              </p>
              <pre><code class="javascript"> let chuoi = "Xin Chào Thế Giới! Chúc Thế Giới Có Một Ngày Vui Vẻ!";<br/><br/> console.log(chuoi.replace('Thế Giới', 'Các Bạn'));/*Chỉ thay thế giá trị đầu tiên phù hợp*/<br/> console.log(chuoi.replace('thế giới', 'Các Bạn'));/*Phân biệt chữ in hoa và in thường*/</code></pre>
              <p class="mt-4">
                Bạn xem kết quả bên dưới nhé:
              </p>
  
              <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589182459/Method-String-JS/loi-khi-dung-replace_-trong-chuoi-js_p2yhzk.png"
                alt="Lỗi Khi Dùng Phương thức replace() trong chuỗi javascript">

                <h5 class="text-white bg-secondary p-2 shadow mt-4 title-article-size rounded">
                  Phương thức <b>includes()</b> trong Chuỗi(String):
                </h5>
                <p>
                  Giúp chúng ta kiểm tra xem chuỗi có <b>chứa</b> chuỗi con ở trong nó hay không? Với giá trị mà phương thức 
                  này trả về sẽ là <b><code>true</code></b> hoặc <b><code>false</code></b>.
                  Để hiểu rõ hơn chúng ta sẽ đi vào ví dụ thực tế nhé:
                </p>
                <pre><code class="javascript"> let chuoi = "Xin Chào Các Bạn";<br/> let chuoiCon1 = chuoi.includes("Bạn");<br/> let chuoiCon2 = chuoi.includes("Mình");<br/><br/> console.log(chuoiCon1);<br/> console.log(chuoiCon2);</code></pre>
                <p class="mt-4">
                  Bạn xem kết quả bên dưới nhé:
                </p>
    
                <img class="img-thumbnail img-fluid shadow p-2 lazyload"
                  data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1589182871/Method-String-JS/Su-dung-includes_-trong-chuoi-js_dqhl10.png"
                  alt="Phương thức includes() trong chuỗi javascript">






















            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được cách <b>sử dụng các phương thức đối với chuỗi</b>
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>