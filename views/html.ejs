<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i> Các Phương Thức Chuỗi Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình đi vào tìm hiểu cách sử dụng các phương thức đối với chuỗi  trong
                ngôn
                ngữ lập trình Javascript để phát triển web nhé.</i>
            </p>

            <div class="row">
              <div class="col-sm-12 bg-light p-2 mt-4 mb-4 shadow rounded-pill">
                <h4 class="text-primary ml-4 title-article-size">Chuỗi Trong Javascript</h4>
              </div>
            </div>
            <h5 class="text-white bg-secondary p-2 shadow  title-article-size rounded">
              Phương thức <b>Concat()</b> trong Chuỗi(String):
            </h5>

            <p class="mt-4">
              Phương thức <b><code>concat()</code></b> được sử dụng để trả về một chuỗi mới
              được <b>ghép từ danh sách các chuỗi lại với nhau</b>. Để hiểu rõ hơn bạn xem cú pháp nó nhé:
            </p>
            <pre><code class="javascript"> (Chuỗi).concat(chuỗi 1, chuỗi 2, chuỗi 3... chuỗi n);</code></pre>
            <p>
              Ở đây bạn có thể ghép bao nhiêu chuỗi tùy ý nha. Bây giờ để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
            </p>

            <pre><code class="javascript"> let chuoi1 = 'Xin Chào';<br/> let chuoi2 = chuoi1.concat(' Các Bạn');<br/><br/> console.log(chuoi2);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588939510/Method-String-JS/Noi-Chuoi-Concat-trong-javascript_afpv4s.png"
              alt="Sử dụng phương thức concat trong chuỗi js">
            <p class="mt-4">
              Ở đây mình có lưu ý nhỏ là:
              <ul>
                <li>Đầu tiên chúng ta tạo một biến <b><code>chuoi1</code></b> chứa giá trị chuỗi <b>Xin Chào</b>.</li>
                <li>Tiếp theo ta sẽ tạo một biến <b><code>chuoi2</code></b> dùng để <b>lưu giá trị chuỗi mới trả về</b>
                  khi nối hai chuỗi
                  <b>'Xin Chào'</b> và <b>' Các Bạn'</b> lại với nhau bằng phương thức <b>concat()</b>.</li>
                <li>Bạn có thể hiểu nôm na cách nó nối chuỗi sẽ y như ta sử dụng toán tử cộng: <b><code>chuoi2 = chuoi1
                      + ' Các Bạn'</code></b>.</li>
                <li>Cuối cùng chúng ta có kết quả là <b>'Xin Chào Các Bạn' </b>in ra màn hình.</li>
              </ul>
            </p>
            <p>
              Người ta khuyên chúng ta nên sử dụng toán tử <b><code>+</code></b> hay <b><code>+=</code></b> để nối chuỗi
              ví nó sẽ giúp cải thiện hiệu
              suất hơn.
            </p>
            <p>
              Đối với các tham số truyền vào trong phương thức <b>concat()</b> mà đang là <b>kiểu dữ liệu khác chuỗi</b>
              ví dụ như số, boolean...
              thì nó sẽ <b>tự động chuyển sang kiểu chuỗi</b> và nối lại với nhau. Để hiểu rõ hơn bạn xem đoạn code sau
              nhé:
            </p>
            <pre><code class="javascript"> let boolean = false;<br/> let number = 5;<br/> let chuoi = "Chuyển đổi sang kiểu chuỗi: ";<br/> let ketQua = chuoi.concat(boolean, number);<br/><br/> console.log(ketQua);<br/> console.log(typeof ketQua);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588940607/Method-String-JS/Su-Dung-Concat-Khac-Kieu-Chuoi-trong-javascript_cggej9.png"
              alt="Chuyển đối kiểu dữ liệu sang chuỗi JS bằng concat()">

            <p class="mt-4">
              Nếu bạn không có biến nào lưu trữ giá trị chuỗi để thực hiện phương thức <b>concat()</b> thì ta có thể
              thay thế
              bằng dấu <b><code>''</code></b> hoặc <b><code>""</code></b>. Để hiểu rõ hơn bạn xem ví dụ sau đây nhé:
            </p>

            <pre><code class="javascript"> let chuoi = ''.concat(4,5,6);<br/> console.log(chuoi);<br/> console.log(typeof chuoi)</code></pre>
            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588941056/Method-String-JS/su-dung-concat-voi-chuoi-js_pbzhzr.png"
              alt="Sử  dụng concat() với chuỗi trong javascript">

            <h5 class="text-white bg-secondary p-2 shadow mt-4  title-article-size rounded">
              Tự động <b>IN HOA</b> hay <b>in thường</b> trong Chuỗi(String) Javascript:
            </h5>
            <p>
              Trong thực tế nhiều khi bạn muốn so sánh các chuỗi với nhau thì nên chuyển nó về <b>trạng thái
                chung</b> là chuỗi in hoa hoặc in thường. Trong Javascript cung cấp cho chúng ta hai phương thức là
              <b><code>toLowerCase()</code></b> để chuyển sang in thường và <b><code>toUpperCase()</code></b>
              để chuyển sang in hoa. Bây giờ để hiểu rõ hơn bạn xem đoạn code sau nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "Xin Chào Các Bạn";<br/> let chuoiInHoa = chuoi.toUpperCase();<br/> let chuoiInThuong = chuoi.toLowerCase();<br/><br/> console.log(chuoiInHoa); <br/> console.log(chuoiInThuong);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588941906/Method-String-JS/in-hoa-in-thuong-trong-chuoi-js_w1jcqe.png"
              alt="Sử  dụng toLowerCase() và  toUpperCase() với chuỗi trong javascript">

            <h5 class="text-white bg-secondary p-2 shadow mt-4  title-article-size rounded">
              Sử dụng phương thức <b>indexOf()</b> trong Chuỗi(String) Javascript:
            </h5>
            <p class="mt-4">
              Phương thức <b>indexOf()</b> giúp chúng ta trả về <b>vị trí chỉ mục</b> của chuỗi con xuất hiện <b>đầu
                tiên</b> trong
              chuỗi.
            </p>
            <p>
              Bây giờ chúng ta sẽ đi vào cú pháp để hiểu rõ hơn nhé:
            </p>
            <pre><code class="javascript"> let viTriChiMuc = (Chuỗi).indexOf(chuỗi con, Vị trí bắt đầu tìm kiếm);</code></pre>
            <p>
              Ở đây mình có một số lưu ý nhỏ là:
              <ul>
                <li>Phương thức <b>indexOf()</b> sẽ trả về giá trị <b>-1</b> nếu như chuỗi chính không chứa chuỗi con.
                </li>
                <li><b> Vị trí bắt đầu tìm kiếm</b> có nghĩa là một tham số để bạn xác định phương thức <b>indexOf()</b>
                  sẽ <b>bắt đầu tìm kiếm từ vị trí chỉ mục nào</b> trong chuỗi. Nếu bạn không sử dụng tham số này thì nó
                  sẽ mặc định
                  <b>vị trí chỉ mục là 0</b>, nghĩa là nó sẽ bắt đầu tìm kiếm từ ký tự đầu tiên của chuỗi.</li>
                <li>Phương thức <b>indexOf()</b> sẽ phân biệt các ký tự chữ thường với chữ in hoa nhé. Ví dụ như
                  <b>ten</b> và <b>Ten</b>
                  sẽ là hai chuỗi con khác nhau.</li>
              </ul>
            </p>

            <p>
              Khi đã nắm sơ lược thì chúng ta sẽ đi vào ví dụ cụ thể là tìm vị trí của từ <b>S</b> đầu tiên trong
             chuỗi <b>JAVASCRIPT</b>.
              Ở bên dưới mình có minh họa để bạn có thể hiểu rõ hơn:
            </p>

            <img class=" lazyload" height="250"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588948422/Method-String-JS/vi-tri-chi-muc-chuoi-js_gwrdpb.svg"
              alt="Ví dụ minh họa indexOf trong javascript">
            <p class="mt-4">
              Như bạn thấy vị trí chỉ mục sẽ <b>bắt đầu từ số 0</b> còn vị trí sẽ bắt đầu bằng số 1 nhé.
            </p>
            <p>
              Bây giờ chúng ta sẽ đi vào đoạn code sử dụng phương thức <b>indexOf()</b> để tìm chữ <b>S</b> nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "JAVASCRIPT";<br/> console.log(chuoi.indexOf('S'));<br/> console.log(chuoi.indexOf('s')); </code></pre>
            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588950590/Method-String-JS/su-dung-index-of-trong-chuoi-js_lwmmn3.png"
              alt="Sử  dụng indexOf() với chuỗi trong javascript">

            <p class="mt-4">
              Như ví dụ trên thì ta có được vị trí chỉ mục của từ <b>S</b> là 4 (Bạn nhớ là vị trí chỉ mục bắt đầu từ số 0 nhé).
              Còn trả về giá trị <b>-1</b> thì nó không tồn tại trong chuỗi, do chữ <b>s</b> và <b>S</b> sẽ khác nhau trong phương thức 
              <b>indexOf()</b>.
            </p>
            <p>
              Vậy có cách nào giúp ta tìm được vị trí chỉ mục của chuỗi con mà <b>không cần phân biệt in hoa và in thường</b> không?<br/>
              Chúng ta có thể sử dụng phương thức đã học là <b>toLowerCase()</b> hoặc <b>toUpperCase()</b> để đưa chuỗi con và chuỗi chính về trạng thái chung
              rồi sau đó ta mới bắt đầu sử dụng phương thức <b>indexOf()</b>. Để hiểu rõ hơn bạn xem đoạn code sau nhé:
            </p>
            <pre><code class="javascript"> let chuoi = ("JAVASCRIPT").toLowerCase();<br/> let chuoiCon = ("s").toLowerCase();<br/><br/> console.log(chuoi.indexOf(chuoiCon));</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588951411/Method-String-JS/tim-ky-tu-thuong-index-of-trong-chuoi-js_wx401m.png"
              alt="Sử  dụng indexOf() và toLowerCase() với chuỗi trong javascript">
            <p class="mt-4">
              Bây giờ chúng ta sẽ đi vào ví dụ tìm kiếm ký tự trong chuỗi bằng cách  sử dụng tham số 
              <b><code>Vị trí bắt đầu tìm kiếm</code></b>. Để hiểu rõ hơn bạn xem ví dụ sau nhé:
            </p>
            <pre><code class="javascript"> let chuoi = 'JAVASCRIPT';<br/> let chuoiCon = chuoi.indexOf('A', 2);<br/><br/> console.log(chuoiCon);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588989484/Method-String-JS/index-of-voi-tham-so-trong-chuoi-js_xyblek.png"
              alt="Sử  dụng indexOf() với tham số trong chuỗi  javascript">
            <p class="mt-4">
              Mình có một số lưu ý nhỏ trong đoạn code trên là:
              <ul>
                <li>Đầu tiên chúng ta sẽ gọi một biến <b><code>chuoi</code></b> lưu giá trị chuỗi là "JAVASCRIPT".</li>
                <li>Tiếp theo ta sẽ sử dụng phương thức <b>indexOf()</b> để tìm chuỗi con.</li>
                <li>ký tự ta muốn tìm là <b><code>'A'</code></b> trong chuỗi và phương thức sẽ tìm kiếm 
                từ vị trí chỉ mục thứ hai tức là bắt đầu từ chữ <b><code>V</code></b>.</li>
                <li>Như vậy bạn thấy nó sẽ xuất hiện vị trí chỉ mục của chuỗi con là số 3.</li>
              </ul>
            </p>
            <p>
              Phần này chúng ta sẽ đi vào sử dụng với việc tìm kiếm vị trí của chuỗi con chứa nhiều ký tự bằng phương
              thức <b>indexOf()</b> trong ví dụ dưới đây nhé:
            </p>
            <pre><code class="javascript"> let chuoi = "Vì mình thích javascript nên mình chia sẻ các kiến thức liên quan đến javascript!";<br/> chuoiCon = chuoi.indexOf("javascript");<br/><br/> console.log(chuoiCon);</code></pre>
            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588990712/Method-String-JS/index-of-voi-tnhieu-ky-tu-trong-chuoi-js_l5diyz.png"
              alt="Sử  dụng indexOf() với nhiều ký tự trong chuỗi  javascript">
            <p class="mt-4">
              Qua ví dụ ta thấy được là phương thức <b><code>indexOf()</code></b> sẽ trả về vị trí của chuỗi con xuất hiện <b>đầu tiên</b> trong chuỗi.
              Vậy có  cách nào để tìm được vị trí xuất hiện <b>cuối cùng</b> của chuỗi con trong chuỗi không?
            </p>
            <p>
              Trong Javascript có cung cấp cho chúng ta một phương thức là <b><code>lastIndexOf()</code></b> giúp ta tìm được vị trí xuất hiện cuối cùng 
              của chuỗi con trong chuỗi. Bây giờ cùng là ví dụ trên nhưng chúng ta thử tìm vị trí cuối cùng của chuỗi con <b>"javascript"</b> trong biến <b><code>chuoi</code></b> để xem nó hoạt động sao nhé:
            </p>

            <pre><code class="javascript"> let chuoi = "Vì mình thích javascript nên mình chia sẻ các kiến thức liên quan đến javascript!";<br/> chuoiCon = chuoi.lastIndexOf("javascript");<br/><br/> console.log(chuoiCon);</code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588991739/Method-String-JS/last-index-of-voi-nhieu-ky-tu-trong-chuoi-js_n8wbmw.png"
              alt="Sử  dụng lastIndexOf() với nhiều ký tự trong chuỗi  javascript">
            <p class="mt-4">
              Bạn có thể sử dụng <b>vòng lặp</b> để xuất ra tất cả các vị trí chỉ mục xuất hiện của chuỗi con hay đếm có bao nhiêu chuỗi con ở trong chuỗi...
              Bây giờ mình sẽ  sử dụng vòng lặp với  ví dụ trên và <b>xuất ra tất cả các vị trí chỉ mục của chuỗi con</b> xuất hiện ở trong chuỗi.
            </p>
            <pre><code class="javascript">&nbsp;&nbsp;let&nbsp;chuoi&nbsp;=&nbsp;'Vì&nbsp;mình&nbsp;thích&nbsp;javascript&nbsp;nên&nbsp;mình&nbsp;chia&nbsp;sẻ&nbsp;các&nbsp;kiến&nbsp;thức&nbsp;liên&nbsp;quan&nbsp;đến&nbsp;javascript!';<br/> &nbsp;let&nbsp;chuoiCon&nbsp;=&nbsp;'javascript';<br/> &nbsp;let&nbsp;viTriChiMuc&nbsp;=&nbsp;chuoi.indexOf(chuoiCon);<br/><br/> &nbsp;while(viTriChiMuc&nbsp;!==&nbsp;-1)&nbsp;{<br/> &nbsp;&nbsp;&nbsp;&nbsp;console.log('Vị&nbsp;trí&nbsp;xuất&nbsp;hiện&nbsp;chuỗi&nbsp;con&nbsp;là&nbsp;'&nbsp;+&nbsp;viTriChiMuc);<br/> &nbsp;&nbsp;&nbsp;&nbsp;viTriChiMuc&nbsp;=&nbsp;chuoi.indexOf(chuoiCon&nbsp;,&nbsp;viTriChiMuc&nbsp;+&nbsp;1);<br/> &nbsp;}<br/></code></pre>

            <p class="mt-4">
              Bạn xem kết quả bên dưới nhé:
            </p>

            <img class="img-thumbnail img-fluid shadow p-2 lazyload"
              data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1588993073/Method-String-JS/vong-lap-va-index-of-voi-nhieu-ky-tu-trong-chuoi-js_eclzei.png"
              alt="Sử  dụng vòng lặp và IndexOf() với nhiều ký tự trong chuỗi  javascript">
            <p class="mt-4">
              Ở đây mình có một số lưu ý sau là:
              <ul>
                <li>
                  Đầu tiên chúng ta sẽ lấy vị trí xuất hiện đầu tiên của chuỗi con trong chuỗi bằng <b><code>chuoi.indexOf(chuoiCon)</code></b>.
                </li>
                <li>Biểu thức <b><code>viTriChiMuc !== -1</code></b> giúp chúng ta kiểm tra chuỗi con <b>có xuất hiện trong chuỗi hay không</b>?</li>
                <li>Khi đã kiểm tra xong thì xuất ra màn hình và tiếp theo chúng ta sẽ tăng vị trí chỉ mục lên <b>1 đơn vị</b>.
                </li>
                <li>
                  Ở đây có nghĩa là vị trí chỉ mục xuất hiện đầu tiên của chuỗi con "javascript" là <b>14</b>.<br/>
                  Để tìm chuỗi con "javascript" <b>tiếp theo</b> trong chuỗi thì chúng ta sẽ  tăng biến vị trí chỉ mục lên 1
                  tức là <b>15</b>.<br/>
                  Lúc này ta sẽ có <b><code>chuoi.indexOf(chuoiCon , 15)</code></b> nghĩa là nó sẽ bắt đầu tìm kiếm từ vị trí chỉ mục 15
                  trong chuỗi.
                </li>
                <li>Vòng lặp cứ như vậy đến khi không còn thỏa mãn biểu thức <b><code>viTriChiMuc !== -1</code></b> thì sẽ dừng lại.</li>
              </ul>
            </p>

            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>


            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được cách <b>sử dụng các phương thức đối với chuỗi</b>
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>