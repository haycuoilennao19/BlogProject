<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<style>
  p {
    font-size: 1rem;
  }

  ul li {
    font-size: 1rem;
  }
</style>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">


      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <div class="text-content-article mt-5">
                <p><b><i> Ngày hôm nay chúng ta sẽ đi vào tìm hiểu những nguồn lập trình (bài viết hướng dẫn, công cụ,
                      framework cho flexbox) giúp chúng ta có thể xây dựng Flexbox Layout được đơn giản và dễ dàng hơn
                      trong thiết kế web nhé! </i></b></p>
              </div>
              <hr />
            </div>
          </div>
          <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"> Flexbox Là Gì?</h2>
          <p> <b>Flexbox</b> là một dạng layout mới được ra mắt trong CSS3 với mục đích giúp bạn có thể linh hoạt hơn
            trong việc sắp xếp, bố trí, căn chỉnh các phần tử trong trang web. Điểm mạnh của nó là có thể dựa vào màn
            hình hiển thị mà điều chỉnh kích thước, vị trí của phần tử sao cho phù hợp nhất mà không cần phải sử dụng
            đến thuộc tính <code>float</code> hay <code>position</code>.</p>
          <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"> Những Bài Viết Hay Về Flexbox
          </h2>
          <p> Trong phần này chúng ta sẽ đi vào tìm hiểu những bài viết hay về Flexbox Layout trong CSS được nhiều lập
            trình viên tin tưởng và học tập nhé!</p>
          <div class="col-sm-12 bg-light p-2 mb-4 mt-4 shadow rounded-pill">
            <h3 class="text-primary ml-4 title-article-size">A Complete Guide to Flexbox (CSS-Tricks)</h3>
          </div><img class="img-thumbnail img-fluid shadow p-2 lazyload"
            data-src="https://res.cloudinary.com/dn4nxz7f0/image/upload/v1603594939/flexbox_css_layout/A_Complete_Guide_to_Flexbox_CSS-Tricks_pwtmcu.png"
            alt="A Complete Guide to Flexbox (CSS-Tricks)">
          <p class="mt-4 pt-2 pb-4"> <a class="button-blog-post-article"
              href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank">Nguồn</a></p>
         








              
          <h4 class="mt-4 pt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>
          <p>Qua đây mình mong bài viết sẽ cung cấp thêm cho bạn kiến thức về flexbox hữu ích dành cho việc phát triển,
            thiết kế web và nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất mong bạn tiếp tục ủng
            hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>
      </div>
      </article>

















    </div>
  </div>




  <div class="mb-5"></div>
</div>
<div class="col-lg-12 col-md-12 col-xs-12">
  <div class="mt-5"></div>



</div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>

<script src="/javascripts/lazysizes.min.js" async></script>

<%- include('footer') -%>