<%- include('header') -%>
<!--Content-->
<div class="jumbotron jumbotron-fluid image-slider">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">
      <div class="content-image">
        <div class="content">
          <blockquote class="blockquote">
            <h1 class="mb-2 content-header">Tôi không có tài năng gì cả. Tôi chỉ đam mê hiểu biết</h1>
            <footer class="blockquote-footer text-right text-white">Albert Einstein</footer>
          </blockquote>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="header-text text-center mt-5 ">
</div>
<div class="container mt-5" id="content-box">
  <div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12">

      <hr />
      <div class="card-text text-justify">
        <article>
          <div class="row">
            <div class="col-sm-12">
              <h2 class="bg-primary mb-4 text-white rounded p-2 shadow title-article-size"><i class="fa fa-cube"
                  aria-hidden="true"></i>Toán Tử Điều Kiện Trong Javascript</h2>
            </div>
          </div>

          <div class="article-title">
            <div class="progress-wrapper">
              <div class="progress-label"></div><progress></progress>
            </div>
          </div>
          <div class="text-content-article mt-5">
            <p><i>Hôm nay bạn hãy cùng mình sẽ đi tìm hiểu khái niệm cũng như cách sử dụng toán tử điều kiện của ngôn
                ngữ lập trình Javascript trong trang web nhé.</i>
            </p>

            <div class="row">
              <div class="col-sm-12 bg-light p-2 mt-4 mb-4 shadow rounded-pill">
                <h4 class="text-primary ml-4 title-article-size">Vòng Lặp For Và While Trong Javascript</h4>
              </div>
            </div>
            <p>
              <b>Vòng lặp</b> được sinh ra để giúp chúng ta giảm các hành động được lặp lại nhiều lần. Ví dụ khi bạn muốn xuất ra 
              màn hình từ số 1 đến số 10 thì việc ghi từng số như vậy sẽ mất rất nhiều thời gian cũng như công sức. Do đó 
              để giải quyết trường hợp trên thì bạn nên sử dụng vòng lặp.
            </p>

            <h5 class="text-white bg-secondary p-2 shadow  title-article-size rounded">Vòng Lặp <b>While</b>  Trong Javascript:</h5>
            <p class="mt-2">
              Câu lệnh <b>while</b> trong javascript sẽ tạo ra vòng lặp để thực hiện khối mã bên trong <b><code>{}</code></b>
               khi điều kiện đúng. Để nắm rõ hơn bạn xem cú pháp bên dưới nhé:
            </p>
            <pre><code class="javascript"> while(Điều Kiện){<br/> &nbsp; &nbsp;/* Thực thi mã khi điều kiện đúng */<br/> }</code></pre>
            <p class="mt-4">
              Như bạn thấy, câu lệnh <b>while</b> sẽ kiểm tra điều kiện trước mỗi lần lặp của vòng lặp.
              Nếu điều kiện là <b><code>true</code></b> thì câu lệnh while sẽ được thực thi và sẽ dừng lại 
              khi điều kiện <b><code>false</code></b>. Để hiểu rõ hơn thì chúng ta sẽ đi vào ví dụ 
              hiển thị các số từ 0 tới 5 ở bên dưới nhé: 
            </p>
            <pre><code class="javascript">&nbsp;&nbsp;let&nbsp;i&nbsp;=&nbsp;0;<br/> &nbsp;while&nbsp;(i&nbsp;<&nbsp;5)&nbsp;{&nbsp;/*&nbsp;Hiển&nbsp;thị&nbsp;0,1,2,3,4*/<br/> &nbsp;&nbsp;&nbsp;console.log(&nbsp;i&nbsp;);<br/> &nbsp;&nbsp;&nbsp;i++;<br/> &nbsp;}<br/></code></pre>
            <p class="mt-4">
              Bây giờ mình sẽ đi vào giải thích đoạn code phía trên nhé:
              <ul>
                <li>Đầu tiên chúng ta sẽ gọi một biến <b><code>i</code></b> với giá trị bằng 0 (Số đầu tiên ta muốn hiển thị ra màn hình).</li>
                <li>Sau đó trước khi thực hiện mỗi vòng lặp  thì câu lệnh <b>while</b> sẽ kiểm tra điều kiện biến <b><code>i</code> có nhỏ hơn 5 không.</b></li>
                <li>Cứ mỗi khi thực hiện vòng lặp thì biến <b><code>i</code></b> sẽ tăng thêm một đơn vị bằng <b><code>i++</code></b>.
                Bạn có thể tham khảo thêm về cách sử dụng <b><code>i++</code></b> ở đây nhé: <a href="https://www.niemvuilaptrinh.com/article/Toan-Tu-Trong-Javascript" title="Toán Tử Trong Javascript" target="_blank">Toán Tử Trong Javascript</a>.
                </li>
                <li>
                  Khi biến <b><code>i</code></b> được cộng tới  giá trị biến bằng 5 thì <b><code>i < 5</code></b> sẽ có giá trị <b><code>false</code></b>.
                  Lúc này vòng lặp sẽ dừng lại.
                </li>
              </ul>
            </p>
            <p>
              Ở đây mình có lưu ý nhỏ là khi bạn quên đặt <b><code>i++</code></b> thì vòng lặp này sẽ lặp vô hạn đấy nhé.
              Ở đây mình có đặt đường dẫn nếu như bạn lỡ bị trường hợp này: <a href="https://developers.google.com/web/updates/2018/04/devtools#stop" title="Dừng Vòng Lặp" target="_blank">Dừng Vòng Lặp</a>
            </p>
            <p>Mình sẽ đi vào ví dụ tiếp theo là hiển thị ra màn hình từ số 4 lùi về số 1 với điều kiện là <b><code>while(i)</code></b>.
            Ở đây bạn có thể hiểu <b><code>while(i)</code></b> sẽ viết tắt cho <b><code>while(i != 0)</code></b>:
            </p>
            <pre><code class="javascript">&nbsp;&nbsp;let&nbsp;i&nbsp;=&nbsp;5;<br/> &nbsp;while&nbsp;(i)&nbsp;{&nbsp;/*&nbsp;Hiển&nbsp;thị&nbsp;5,4,3,2,1*/<br/> &nbsp;&nbsp;&nbsp;console.log(&nbsp;i&nbsp;);<br/> &nbsp;&nbsp;&nbsp;i--;<br/> &nbsp;}<br/></code></pre>
            <h5 class="text-white bg-secondary p-2 mt-4 shadow  title-article-size rounded">
              Vòng Lặp <b>Do...While</b> Trong Javascript:
            </h5>


















































            <h4 class="mt-4"> <b><i class="fa fa-tasks" aria-hidden="true"></i> Tổng kết: </b></h4>

            <p>Qua đây mình mong bài viết sẽ giúp bạn hiểu được khái niệm cũng như cách sử dụng toán tử điều kiện
              trong ngôn ngữ
              Javascript và
              nếu có thắc mắc gì cứ gửi email mình sẽ phản hồi sớm nhất có thể. Rất
              mong bạn tiếp tục ủng
              hộ trang web để mình có thể viết nhiều bài hay hơn nữa nhé. Chúc bạn có một ngày vui vẻ!</p>

          </div>
        </article>
      </div>
    </div>




    <div class="mb-5"></div>
  </div>
  <div class="col-lg-12 col-md-12 col-xs-12">
    <div class="mt-5"></div>
    <div class="card card-search">
      <div class="card-header card-header-category">
        Từ Khóa
      </div>
      <div class="card-body card-body-search mt-4">
        <h3 class="button-article"><a href="/article/css"><button type="button"
              class="CSS btn shadow-sm rounded btn-success m-2 pl-3 pr-3">CSS</button></a>
          <a href="/article/html"><button type="button"
              class="HTML btn shadow-sm rounded btn-success m-2 pl-3 pr-3">HTML</button></a>
          <a href="/article/nodejs">
            <button type="button" class="btn shadow-sm rounded btn-success m-2 pl-3 pr-3">NodeJS</button></a>
        </h3>
      </div>
    </div>


  </div>
</div>
</div>

<script src='/javascripts/highlight.pack.js'></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<script>
  $(document).ready(function () {
    const win = $(window);
    const doc = $(document);
    const progressBar = $('progress');
    const progressLabel = $('.progress-label');
    const setValue = () => win.scrollTop();
    const setMax = () => doc.height() - win.height();
    const setPercent = () => Math.round(win.scrollTop() / (doc.height() - win.height()) * 100);

    progressLabel.text(setPercent() + '%');
    progressBar.attr({
      value: setValue(),
      max: setMax()
    });

    doc.on('scroll', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue()
      });
    });

    win.on('resize', () => {
      progressLabel.text(setPercent() + '%');
      progressBar.attr({
        value: setValue(),
        max: setMax()
      });
    })
  });
</script>
<script>
  var container = document.getElementById('content-box');

  $(window).on('load resize', (function () {
    windowsize = $(window).width();

    if ((windowsize <= 992) && (screen.height >= 768)) {
      container.classList.remove('container');
      container.classList.add('container-fluid')

      //navbar
      $('.nav-item').addClass('hvr-underline-from-left')
    } else {
      container.classList.add('container');
      container.classList.remove('container-fluid')

      //navbar
      $('.nav-item').removeClass('hvr-underline-from-left')
    }
  }));
</script>
<script src="/javascripts/lazysizes.min.js" async></script>
<%- include('footer') -%>